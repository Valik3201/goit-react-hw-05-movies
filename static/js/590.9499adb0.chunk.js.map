{"version":3,"file":"static/js/590.9499adb0.chunk.js","mappings":"6PAEMA,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAQ,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAERC,EAAAA,EAAAA,IAAU,UAADC,OACpBN,EAAQ,2BAClBO,EAAAA,GACA,KAAD,EACoC,OAJ/BN,EAAQC,EAAAM,KAIdC,QAAQC,MAAMT,EAASU,KAAKC,SAASV,EAAAW,OAAA,SAC9BZ,EAASU,KAAKC,SAAO,OAEP,MAFOV,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAE5BO,QAAQM,MAAKb,EAAAY,IAAQZ,EAAAY,GAAA,yBAAAZ,EAAAc,OAAA,GAAAjB,EAAA,kBAGxB,gBAZiBkB,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,K,uCCsDlB,EA/CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAepC,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAjC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA+B,EAAA,OAAAhC,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEaT,EAAayB,GAAS,KAAD,EAA1CM,EAAYxB,EAAAM,KAClBmB,EAAgBD,GAAcxB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAE9BO,QAAQM,MAAKb,EAAAY,IAAQ,yBAAAZ,EAAAc,OAAA,GAAAjB,EAAA,kBAExB,kBAPc,OAAAH,EAAAsB,MAAA,KAAAC,UAAA,KASfU,GACF,GAAG,CAACT,IAECM,GAKHK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACHN,EAAaQ,KAAI,SAAAC,GAAM,OACtBF,EAAAA,EAAAA,KAAA,MAAAD,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAOC,UAEZH,EAAAA,EAAAA,KAAA,KAAAD,UAAIK,EAAAA,EAAAA,IAAO,IAAIC,KAAKH,EAAOI,YAAa,uBAEvC,6CAA6CC,KAC5CL,EAAOM,UAEPR,EAAAA,EAAAA,KAAA,OAAAD,UAAMU,EAAAA,EAAAA,IAAMP,EAAOM,YAEnBR,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACU,EAAAA,EAAa,CAAAX,SAAEG,EAAOM,gBAZtBN,EAAOS,GAgBX,QAvBFX,EAAAA,EAAAA,KAAA,OAAAD,SAAK,cA2BhB,C,8FCpDA3B,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAME,EAAc,CAClBsC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N","sources":["services/fetchReviews.js","components/Reviews.jsx","services/api.js"],"sourcesContent":["import { axios, baseOptions } from './api';\n\nconst fetchReviews = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/reviews?language=en-US`,\n      baseOptions\n    );\n    console.debug(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport { fetchReviews };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchReviews } from 'services/fetchReviews';\n\nimport { format } from 'date-fns';\nimport ReactMarkdown from 'react-markdown';\nimport parse from 'html-react-parser';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movieReviews = await fetchReviews(movieId);\n        setMovieReviews(movieReviews);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (!movieReviews) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1>Reviews</h1>\n      {movieReviews.map(review => (\n        <ul key={review.id}>\n          <li>\n            <h4>{review.author}</h4>\n\n            <p>{format(new Date(review.created_at), 'MMMM d, yyyy H:mm')}</p>\n\n            {/<([A-Za-z][A-Za-z0-9]*)\\b[^>]*>(.*?)<\\/\\1>/.test(\n              review.content\n            ) ? (\n              <div>{parse(review.content)}</div>\n            ) : (\n              <div>\n                <ReactMarkdown>{review.content}</ReactMarkdown>\n              </div>\n            )}\n          </li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie_id","response","_context","prev","next","axios","concat","baseOptions","sent","console","debug","data","results","abrupt","t0","error","stop","_x","apply","arguments","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieReviews","setMovieReviews","useEffect","fetchData","_movieReviews","_jsxs","children","_jsx","map","review","author","format","Date","created_at","test","content","parse","ReactMarkdown","id","headers","accept","Authorization"],"sourceRoot":""}