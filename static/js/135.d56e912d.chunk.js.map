{"version":3,"file":"static/js/135.d56e912d.chunk.js","mappings":"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","sources":["@/components/ui/badge.jsx","@/components/ui/alert.jsx","components/Alert.jsx","components/MovieItem.jsx","services/searchMovies.js","@/components/ui/input.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import * as React from \"react\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  ...props\n}) {\n  return (<div className={cn(badgeVariants({ variant }), className)} {...props} />);\n}\n\nexport { Badge, badgeVariants }\n","import * as React from 'react';\nimport { cva } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst alertVariants = cva(\n  'relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7',\n  {\n    variants: {\n      variant: {\n        default: 'bg-background text-foreground',\n        destructive:\n          'border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nconst Alert = React.forwardRef(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n));\nAlert.displayName = 'Alert';\n\nconst AlertTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('mb-1 font-medium leading-none tracking-tight', className)}\n    {...props}\n  />\n));\nAlertTitle.displayName = 'AlertTitle';\n\nconst AlertDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('text-sm [&_p]:leading-relaxed', className)}\n    {...props}\n  />\n));\nAlertDescription.displayName = 'AlertDescription';\n\nexport { Alert, AlertTitle, AlertDescription };\n","import {\n  ExclamationTriangleIcon,\n  InfoCircledIcon,\n} from '@radix-ui/react-icons';\n\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\n\nexport const AlertDestructive = ({ message }) => {\n  return (\n    <Alert variant=\"destructive\" className=\"max-w-2xl\">\n      <ExclamationTriangleIcon className=\"h-4 w-4\" />\n      <AlertTitle>Error</AlertTitle>\n      <AlertDescription>{message}</AlertDescription>\n    </Alert>\n  );\n};\n\nexport const AlertInfo = () => {\n  return (\n    <Alert className=\"max-w-2xl\">\n      <InfoCircledIcon className=\"h-4 w-4 text-blue-500\" />\n      <AlertTitle>No Search Results</AlertTitle>\n      <AlertDescription>\n        Your search did not match any movies. Please try again with different\n        keywords or filters.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\nexport const AlertNoCast = () => {\n  return (\n    <Alert className=\"max-w-2xl mt-8\">\n      <InfoCircledIcon className=\"h-4 w-4 text-blue-500\" />\n      <AlertTitle>No Cast Information</AlertTitle>\n      <AlertDescription>\n        There is no information available about the cast for this movie.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\nexport const AlertNoReviews = () => {\n  return (\n    <Alert className=\"max-w-2xl mt-8\">\n      <InfoCircledIcon className=\"h-4 w-4 text-blue-500\" />\n      <AlertTitle>No Reviews Yet</AlertTitle>\n      <AlertDescription>\n        There are currently no reviews available for this movie.\n      </AlertDescription>\n    </Alert>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nimport { Badge } from '@/components/ui/badge';\n\nconst MovieItem = ({ movie }) => {\n  return (\n    <Link to={`/movies/${movie.id}`} key={movie.id}>\n      <div className=\"flex flex-col gap-2\">\n        <div className=\"overflow-hidden rounded-lg\">\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                : `https://placehold.co/342x513?text=${\n                    movie.title || movie.name\n                  }`\n            }\n            alt={movie.title || movie.name}\n            className=\"h-auto w-auto object-cover transition-all hover:scale-105\"\n          />\n        </div>\n        {movie.media_type && (\n          <div className=\"flex-none\">\n            <Badge>\n              {movie.media_type.charAt(0).toUpperCase() +\n                movie.media_type.slice(1)}\n            </Badge>\n          </div>\n        )}\n\n        <div className=\"flex flex-col gap-x-0.5\">\n          <h3 className=\"scroll-m-20 text-lg font-bold tracking-tight\">\n            {movie.title || movie.name}\n          </h3>\n          <h4 className=\"text-sm text-muted-foreground font-bold\">\n            {movie.release_date && new Date(movie.release_date).getFullYear()}\n            {movie.first_air_date &&\n              new Date(movie.first_air_date).getFullYear()}\n          </h4>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default MovieItem;\n","import { axios, baseOptions } from './api';\n\nconst searchMovies = async queryParams => {\n  const options = {\n    ...baseOptions,\n    params: {\n      query: queryParams.query,\n      include_adult: queryParams.include_adult || false,\n      language: queryParams.language || 'en-US',\n      primary_release_year: queryParams.primary_release_year || '',\n      page: queryParams.page || 1,\n      region: queryParams.region || '',\n      year: queryParams.year || '',\n    },\n  };\n\n  const { data } = await axios.get('/search/movie', options);\n  return data.results;\n};\n\nexport { searchMovies };\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\n  return (\n    (<input\n      type={type}\n      className={cn(\n        \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      ref={ref}\n      {...props} />)\n  );\n})\nInput.displayName = \"Input\"\n\nexport { Input }\n","import { useRef, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { searchMovies } from 'services/searchMovies';\n\nimport MovieItem from 'components/MovieItem';\n\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\n\nimport { Loader } from 'components/Loader';\nimport { AlertDestructive, AlertInfo } from 'components/Alert';\n\nimport { MagnifyingGlassIcon } from '@radix-ui/react-icons';\n\nconst Movies = () => {\n  const searchInputRef = useRef(null);\n  const yearInputRef = useRef(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const { data, isLoading, isError, error, refetch } = useQuery({\n    queryKey: ['searchMovies'],\n    queryFn: async () => {\n      return await searchMovies({\n        query: searchInputRef.current?.value.trim(),\n        include_adult: false,\n        language: 'en-US',\n        primary_release_year: yearInputRef.current?.value.trim(),\n        page: 1,\n        region: '',\n        year: '',\n      });\n    },\n  });\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    const searchQuery = searchInputRef.current.value.trim();\n    const releaseYear = yearInputRef.current.value.trim();\n\n    setSearchParams({\n      query: searchQuery,\n      ...(releaseYear && { year: releaseYear }),\n    });\n\n    refetch({\n      query: searchQuery,\n      include_adult: false,\n      language: 'en-US',\n      primary_release_year: releaseYear,\n      page: 1,\n      region: '',\n      year: '',\n    });\n  };\n\n  useEffect(() => {\n    const q = searchParams.get('query') || '';\n    const year = searchParams.get('year') || '';\n    searchInputRef.current.value = q;\n    yearInputRef.current.value = year;\n  }, [searchParams]);\n\n  return (\n    <div>\n      <h1 className=\"scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl pb-8\">\n        Search Movies\n      </h1>\n      <form onSubmit={handleSearch}>\n        <div className=\"flex flex-col sm:flex-row w-full max-w-2xl items-start gap-2 pb-8\">\n          <Input\n            type=\"text\"\n            ref={searchInputRef}\n            placeholder=\"Enter movie title\"\n          />\n          <Input\n            type=\"text\"\n            ref={yearInputRef}\n            placeholder=\"Enter release year\"\n          />\n          <Button type=\"submit\">\n            <MagnifyingGlassIcon className=\"mr-2 h-4 w-4\" />\n            Search\n          </Button>\n        </div>\n      </form>\n      {isLoading && <Loader />}\n      {isError && <AlertDestructive message={error.message} />}\n      {searchParams.has('query') && data?.length === 0 && <AlertInfo />}\n      {data && !isLoading && (\n        <div className='className=\"grid grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4'>\n          {data?.map(movie => (\n            <MovieItem movie={movie} key={movie.id} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["badgeVariants","cva","variants","variant","default","secondary","destructive","outline","defaultVariants","Badge","_ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","cn","alertVariants","Alert","React","ref","role","displayName","AlertTitle","_ref2","_excluded2","AlertDescription","_ref3","_excluded3","AlertDestructive","message","_jsxs","children","ExclamationTriangleIcon","AlertInfo","InfoCircledIcon","AlertNoCast","AlertNoReviews","movie","Link","to","concat","id","src","poster_path","title","name","alt","media_type","charAt","toUpperCase","slice","release_date","Date","getFullYear","first_air_date","searchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","queryParams","options","_yield$axios$get","data","_context","prev","next","baseOptions","params","query","include_adult","language","primary_release_year","page","region","year","axios","sent","abrupt","results","stop","_x","apply","arguments","Input","type","searchInputRef","useRef","yearInputRef","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useQuery","useQuery","queryKey","queryFn","_queryFn","_searchInputRef$curre","_yearInputRef$current","current","value","trim","isLoading","isError","error","refetch","handleSearch","_callee2","e","searchQuery","releaseYear","_context2","preventDefault","useEffect","q","get","onSubmit","placeholder","Button","MagnifyingGlassIcon","Loader","has","length","map","MovieItem","headers","accept","Authorization"],"sourceRoot":""}