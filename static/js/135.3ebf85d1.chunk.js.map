{"version":3,"file":"static/js/135.3ebf85d1.chunk.js","mappings":"iRAEMA,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAW,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAWjC,OAVGL,GAAOM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRC,EAAAA,GAAW,IACdC,OAAQ,CACNC,MAAOV,EAAYU,MACnBC,cAAeX,EAAYW,gBAAiB,EAC5CC,SAAUZ,EAAYY,UAAY,QAClCC,qBAAsBb,EAAYa,sBAAwB,GAC1DC,KAAMd,EAAYc,MAAQ,EAC1BC,OAAQf,EAAYe,QAAU,GAC9BC,KAAMhB,EAAYgB,MAAQ,MAC3BZ,EAAAE,KAAA,EAGoBW,EAAAA,EAAAA,IAAU,gBAAiBhB,GAAS,KAAD,EAA9C,OAA8CC,EAAAE,EAAAc,KAAlDf,EAAID,EAAJC,KAAIC,EAAAe,OAAA,SACLhB,EAAKiB,SAAO,wBAAAhB,EAAAiB,OAAA,GAAAtB,EAAA,KACpB,gBAhBiBuB,GAAA,OAAA1B,EAAA2B,MAAA,KAAAC,UAAA,K,8DCEZC,EAAQC,EAAAA,YAAiB,SAAA9B,EAAgC+B,GAAS,IAAtCC,EAAShC,EAATgC,UAAWC,EAAIjC,EAAJiC,KAASC,GAAKC,EAAAA,EAAAA,GAAAnC,EAAAoC,GACzD,OACGC,EAAAA,EAAAA,KAAA,SAAA1B,EAAAA,EAAAA,GAAA,CACCsB,KAAMA,EACND,WAAWM,EAAAA,EAAAA,IACT,wUACAN,GAEFD,IAAKA,GACDG,GAEV,IACAL,EAAMU,YAAc,QCRpB,IAiGA,EAjGe,WACb,IAAMC,GAAiBC,EAAAA,EAAAA,QAAO,MACxBC,GAAeD,EAAAA,EAAAA,QAAO,MAC5BE,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAEpCI,GAAqDC,EAAAA,EAAAA,GAAS,CAC5DC,SAAU,CAAC,gBACXC,QAAQ,WAAD,IAAAC,GAAApD,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAC,IAAA,IAAAmD,EAAAC,EAAA,OAAArD,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMX,EAAa,CACxBe,MAA6B,QAAxBwC,EAAEd,EAAegB,eAAO,IAAAF,OAAA,EAAtBA,EAAwBG,MAAMC,OACrC3C,eAAe,EACfC,SAAU,QACVC,qBAA0C,QAAtBsC,EAAEb,EAAac,eAAO,IAAAD,OAAA,EAApBA,EAAsBE,MAAMC,OAClDxC,KAAM,EACNC,OAAQ,GACRC,KAAM,KACL,KAAD,SAAAZ,EAAAe,OAAA,SAAAf,EAAAc,MAAA,wBAAAd,EAAAiB,OAAA,GAAAtB,EAAA,KACH,yBAAAkD,EAAA1B,MAAA,KAAAC,UAAA,EAVO,KAFFrB,EAAI0C,EAAJ1C,KAAMoD,EAASV,EAATU,UAAWC,EAAOX,EAAPW,QAASC,EAAKZ,EAALY,MAAOC,EAAOb,EAAPa,QAenCC,EAAY,eAAA/D,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA8D,EAAMC,GAAC,IAAAC,EAAAC,EAAA,OAAAjE,IAAAA,MAAA,SAAAkE,GAAA,cAAAA,EAAA3D,KAAA2D,EAAA1D,MAAA,OAC1BuD,EAAEI,iBACIH,EAAc1B,EAAegB,QAAQC,MAAMC,OAC3CS,EAAczB,EAAac,QAAQC,MAAMC,OAE/CV,GAAerC,EAAAA,EAAAA,GAAC,CACdG,MAAOoD,GACHC,GAAe,CAAE/C,KAAM+C,KAG7BL,EAAQ,CACNhD,MAAOoD,EACPnD,eAAe,EACfC,SAAU,QACVC,qBAAsBkD,EACtBjD,KAAM,EACNC,OAAQ,GACRC,KAAM,KACL,wBAAAgD,EAAA3C,OAAA,GAAAuC,EAAA,KACJ,gBAnBiBtC,GAAA,OAAA1B,EAAA2B,MAAA,KAAAC,UAAA,KA4BlB,OAPA0C,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAIxB,EAAayB,IAAI,UAAY,GACjCpD,EAAO2B,EAAayB,IAAI,SAAW,GACzChC,EAAegB,QAAQC,MAAQc,EAC/B7B,EAAac,QAAQC,MAAQrC,CAC/B,GAAG,CAAC2B,KAGF0B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACErC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,sEAAqE0C,SAAC,mBAGpFrC,EAAAA,EAAAA,KAAA,QAAMsC,SAAUZ,EAAaW,UAC3BD,EAAAA,EAAAA,MAAA,OAAKzC,UAAU,oDAAmD0C,SAAA,EAChErC,EAAAA,EAAAA,KAACR,EAAK,CACJI,KAAK,OACLF,IAAKS,EACLoC,YAAY,0BAEdvC,EAAAA,EAAAA,KAACR,EAAK,CACJI,KAAK,OACLF,IAAKW,EACLkC,YAAY,2BAEdvC,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,CAAC5C,KAAK,SAAQyC,SAAC,gBAGzBf,IAAatB,EAAAA,EAAAA,KAAA,OAAAqC,SAAK,eAClBd,IAAWa,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,wBAAsBb,EAAMiB,YAC7CzC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,sFAAqF0C,SAC7F,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAMwE,KAAI,SAAAC,GAAK,OACd3C,EAAAA,EAAAA,KAAC4C,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,EAAMI,IAAKV,UAC9BD,EAAAA,EAAAA,MAAA,OAAKzC,UAAU,sBAAqB0C,SAAA,EAClCrC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,6BAA4B0C,UACzCrC,EAAAA,EAAAA,KAAA,OACEgD,IAAG,kCAAAF,OAAoCH,EAAMM,aAC7CC,IAAKP,EAAMQ,OAASR,EAAMS,KAC1BzD,UAAU,iEAGdK,EAAAA,EAAAA,KAAA,MAAIL,UAAU,+CAA8C0C,SACzDM,EAAMQ,OAASR,EAAMS,QAExBpD,EAAAA,EAAAA,KAAA,MAAIqD,SAAS,8CAA6ChB,SACvDM,EAAMW,aACH,IAAIC,KAAKZ,EAAMW,cAAcE,cAC7B,IAAID,KAAKZ,EAAMc,gBAAgBD,oBAfHb,EAAMI,GAkBrC,QAKjB,C,8FCrGA/D,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMT,EAAc,CAClBmF,QAAS,CACPC,OAAQ,mBACRC,cACE,8N","sources":["services/searchMovies.js","@/components/ui/input.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { axios, baseOptions } from './api';\n\nconst searchMovies = async queryParams => {\n  const options = {\n    ...baseOptions,\n    params: {\n      query: queryParams.query,\n      include_adult: queryParams.include_adult || false,\n      language: queryParams.language || 'en-US',\n      primary_release_year: queryParams.primary_release_year || '',\n      page: queryParams.page || 1,\n      region: queryParams.region || '',\n      year: queryParams.year || '',\n    },\n  };\n\n  const { data } = await axios.get('/search/movie', options);\n  return data.results;\n};\n\nexport { searchMovies };\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\n  return (\n    (<input\n      type={type}\n      className={cn(\n        \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      ref={ref}\n      {...props} />)\n  );\n})\nInput.displayName = \"Input\"\n\nexport { Input }\n","import { useRef, useEffect } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { searchMovies } from 'services/searchMovies';\n\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\n\nconst Movies = () => {\n  const searchInputRef = useRef(null);\n  const yearInputRef = useRef(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const { data, isLoading, isError, error, refetch } = useQuery({\n    queryKey: ['searchMovies'],\n    queryFn: async () => {\n      return await searchMovies({\n        query: searchInputRef.current?.value.trim(),\n        include_adult: false,\n        language: 'en-US',\n        primary_release_year: yearInputRef.current?.value.trim(),\n        page: 1,\n        region: '',\n        year: '',\n      });\n    },\n  });\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    const searchQuery = searchInputRef.current.value.trim();\n    const releaseYear = yearInputRef.current.value.trim();\n\n    setSearchParams({\n      query: searchQuery,\n      ...(releaseYear && { year: releaseYear }),\n    });\n\n    refetch({\n      query: searchQuery,\n      include_adult: false,\n      language: 'en-US',\n      primary_release_year: releaseYear,\n      page: 1,\n      region: '',\n      year: '',\n    });\n  };\n\n  useEffect(() => {\n    const q = searchParams.get('query') || '';\n    const year = searchParams.get('year') || '';\n    searchInputRef.current.value = q;\n    yearInputRef.current.value = year;\n  }, [searchParams]);\n\n  return (\n    <div>\n      <h1 className=\"scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl pb-8\">\n        Search Movies\n      </h1>\n      <form onSubmit={handleSearch}>\n        <div className=\"flex w-full max-w-2xl items-center space-x-2 pb-8\">\n          <Input\n            type=\"text\"\n            ref={searchInputRef}\n            placeholder=\"Enter movie title...\"\n          />\n          <Input\n            type=\"text\"\n            ref={yearInputRef}\n            placeholder=\"Enter release year...\"\n          />\n          <Button type=\"submit\">Search</Button>\n        </div>\n      </form>\n      {isLoading && <div>Loading...</div>}\n      {isError && <div>Error fetching data: {error.message}</div>}\n      <div className='className=\"grid grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4'>\n        {data?.map(movie => (\n          <Link to={`/movies/${movie.id}`} key={movie.id}>\n            <div className=\"flex flex-col gap-2\">\n              <div className=\"overflow-hidden rounded-lg\">\n                <img\n                  src={`https://image.tmdb.org/t/p/w342${movie.poster_path}`}\n                  alt={movie.title || movie.name}\n                  className=\"h-auto w-auto object-cover transition-all hover:scale-105\"\n                />\n              </div>\n              <h3 className=\"scroll-m-20 text-md font-bold tracking-tight\">\n                {movie.title || movie.name}\n              </h3>\n              <h4 lassName=\"text-md text-muted-foreground font-semibold\">\n                {movie.release_date\n                  ? new Date(movie.release_date).getFullYear()\n                  : new Date(movie.first_air_date).getFullYear()}\n              </h4>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["searchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","queryParams","options","_yield$axios$get","data","_context","prev","next","_objectSpread","baseOptions","params","query","include_adult","language","primary_release_year","page","region","year","axios","sent","abrupt","results","stop","_x","apply","arguments","Input","React","ref","className","type","props","_objectWithoutProperties","_excluded","_jsx","cn","displayName","searchInputRef","useRef","yearInputRef","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useQuery","useQuery","queryKey","queryFn","_queryFn","_searchInputRef$curre","_yearInputRef$current","current","value","trim","isLoading","isError","error","refetch","handleSearch","_callee2","e","searchQuery","releaseYear","_context2","preventDefault","useEffect","q","get","_jsxs","children","onSubmit","placeholder","Button","message","map","movie","Link","to","concat","id","src","poster_path","alt","title","name","lassName","release_date","Date","getFullYear","first_air_date","headers","accept","Authorization"],"sourceRoot":""}