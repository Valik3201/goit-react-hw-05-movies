{"version":3,"file":"static/js/83.f3166300.chunk.js","mappings":"4PAEMA,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAQ,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAELC,EAAAA,EAAAA,IAAU,UAADC,OACpBN,EAAQ,2BAClBO,EAAAA,GACA,KAAD,EAHa,OAARN,EAAQC,EAAAM,KAAAN,EAAAO,OAAA,SAIPR,EAASS,KAAKC,MAAI,OAEJ,MAFIT,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAEzBW,QAAQC,MAAKZ,EAAAU,IAAQV,EAAAU,GAAA,yBAAAV,EAAAa,OAAA,GAAAhB,EAAA,kBAGxB,gBAXciB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,K,SC2Cf,EAxCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAe9B,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAhC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA8B,EAAA,OAAA/B,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEUT,EAAUwB,GAAS,KAAD,EAApCM,EAASvB,EAAAM,KACfkB,EAAaD,GAAWvB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAExBW,QAAQC,MAAKZ,EAAAU,IAAQ,yBAAAV,EAAAa,OAAA,GAAAhB,EAAA,kBAExB,kBAPc,OAAAH,EAAAqB,MAAA,KAAAC,UAAA,KASfU,GACF,GAAG,CAACT,IAECM,GAKHK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,SACHN,EAAUQ,KAAI,SAAAC,GAAK,OAClBF,EAAAA,EAAAA,KAAA,MAAAD,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEG,IAAG,iCAAA7B,OAAmC4B,EAAME,cAC5CC,IAAKH,EAAMI,QAEbN,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAMI,QACXN,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAMK,gBAPNL,EAAMM,GASV,QAhBFR,EAAAA,EAAAA,KAAA,OAAAD,SAAK,cAoBhB,C,8FCzCA1B,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAME,EAAc,CAClBkC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N","sources":["services/fetchCast.js","components/Cast.jsx","services/api.js"],"sourcesContent":["import { axios, baseOptions } from './api';\n\nconst fetchCast = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/credits?language=en-US`,\n      baseOptions\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport { fetchCast };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchCast } from 'services/fetchCast';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movieCast = await fetchCast(movieId);\n        setMovieCast(movieCast);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (!movieCast) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1>Cast</h1>\n      {movieCast.map(actor => (\n        <ul key={actor.id}>\n          <li>\n            <img\n              src={`https://image.tmdb.org/t/p/w92${actor.profile_path}`}\n              alt={actor.name}\n            />\n            <h4>{actor.name}</h4>\n            <h5>{actor.character}</h5>\n          </li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie_id","response","_context","prev","next","axios","concat","baseOptions","sent","abrupt","data","cast","t0","console","error","stop","_x","apply","arguments","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","useEffect","fetchData","_movieCast","_jsxs","children","_jsx","map","actor","src","profile_path","alt","name","character","id","headers","accept","Authorization"],"sourceRoot":""}