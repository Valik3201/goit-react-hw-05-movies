{"version":3,"file":"static/js/516.62fcb086.chunk.js","mappings":"6OAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOvB,OANKJ,EAAU,CACdK,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAELL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGwBV,EAAAA,EAAAA,IACrB,mCACAM,GACA,KAAD,EAHa,OAARC,EAAQC,EAAAM,KAAAN,EAAAO,OAAA,SAIPR,EAASS,KAAKC,SAAO,OAEP,MAFOT,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAE5BW,QAAQC,MAAKZ,EAAAU,IAAQV,EAAAU,GAAA,yBAAAV,EAAAa,OAAA,GAAAhB,EAAA,kBAGxB,kBAnBsB,OAAAH,EAAAoB,MAAA,KAAAC,UAAA,K,SC0CvB,EA3Ca,WACX,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAgBxB,OAdAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAA7B,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA2B,EAAA,OAAA5B,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEaT,IAAoB,KAAD,EAAxC+B,EAAYxB,EAAAM,KAClBK,QAAQc,MAAMD,GACdH,EAAUG,GAAcxB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAExBW,QAAQC,MAAKZ,EAAAU,IAAQ,yBAAAV,EAAAa,OAAA,GAAAhB,EAAA,kBAExB,kBARc,OAAAH,EAAAoB,MAAA,KAAAC,UAAA,KAUfQ,GACF,GAAG,KAGDG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kCACJC,EAAAA,EAAAA,KAAA,OAAAD,SACGP,EAAOS,KAAI,SAAAC,GAAK,OACfJ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEG,IAAG,kCAAAC,OAAoCF,EAAMG,aAC7CC,IAAKJ,EAAMK,OAASL,EAAMM,QAE5BV,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CACwB,UAArBG,EAAMO,WAAyB,QAAU,OAAO,IAAE,IAClDP,EAAMK,OAASL,EAAMM,SAExBV,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eAAaG,EAAMO,eACtBX,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CACwB,UAArBG,EAAMO,WAAyB,eAAiB,iBAAiB,KAC/DP,EAAMQ,cAAgBR,EAAMS,oBAZzBT,EAAMU,GAcV,QAKhB,C","sources":["services/api.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingData = async () => {\n  const options = {\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n    },\n  };\n\n  try {\n    const response = await axios.get(\n      '/trending/all/day?language=en-US',\n      options\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport { fetchTrendingData };\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingData } from 'services/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const trendingData = await fetchTrendingData();\n        console.debug(trendingData);\n        setMovies(trendingData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending Movies and TV Shows</h1>\n      <div>\n        {movies.map(movie => (\n          <div key={movie.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w342${movie.poster_path}`}\n              alt={movie.title || movie.name}\n            />\n            <p>\n              {movie.media_type === 'movie' ? 'Title' : 'Name'}:{' '}\n              {movie.title || movie.name}\n            </p>\n            <p>Media Type: {movie.media_type}</p>\n            <p>\n              {movie.media_type === 'movie' ? 'Release Date' : 'First Air Date'}\n              : {movie.release_date || movie.first_air_date}\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["axios","fetchTrendingData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","options","response","_context","prev","next","headers","accept","Authorization","sent","abrupt","data","results","t0","console","error","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","movies","setMovies","useEffect","fetchData","trendingData","debug","_jsxs","children","_jsx","map","movie","src","concat","poster_path","alt","title","name","media_type","release_date","first_air_date","id"],"sourceRoot":""}