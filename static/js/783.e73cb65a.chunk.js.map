{"version":3,"file":"static/js/783.e73cb65a.chunk.js","mappings":"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","sources":["services/fetchMovieDetails.js","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { axios, baseOptions } from './api';\n\nconst fetchMovieDetails = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}?language=en-US`,\n      baseOptions\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport { fetchMovieDetails };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\n\nimport { fetchMovieDetails } from 'services/fetchMovieDetails';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movieDetails = await fetchMovieDetails(movieId);\n        setMovieDetails(movieDetails);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1>Movie Details</h1>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w342${movieDetails.poster_path}`}\n          alt={movieDetails.original_title}\n        />\n        <h1>{movieDetails.original_title}</h1>\n        <p>{movieDetails.overview}</p>\n        <h5>\n          <i>{movieDetails.tagline}</i>\n        </h5>\n\n        <h4>Genres</h4>\n        {movieDetails.genres.map(genre => (\n          <ul key={genre.id}>\n            <li>{genre.name}</li>\n          </ul>\n        ))}\n\n        <h4>Production Companies</h4>\n        {movieDetails.production_countries.map(country => (\n          <ul key={country.iso_3166_1}>\n            <li>{country.name}</li>\n          </ul>\n        ))}\n      </div>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie_id","response","_context","prev","next","axios","concat","baseOptions","sent","abrupt","data","t0","console","error","stop","_x","apply","arguments","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","useEffect","fetchData","_movieDetails","_jsxs","children","_jsx","src","poster_path","alt","original_title","overview","tagline","genres","map","genre","name","id","production_countries","country","iso_3166_1","Link","to","Suspense","fallback","Outlet","headers","accept","Authorization"],"sourceRoot":""}