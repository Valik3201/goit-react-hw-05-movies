{"version":3,"file":"static/js/317.7f260796.chunk.js","mappings":"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","sources":["components/Loader.jsx","services/fetchReviews.js","@/components/ui/card.jsx","components/Reviews.jsx","services/api.js"],"sourcesContent":["import { ReloadIcon } from '@radix-ui/react-icons';\n\nimport { Button } from '@/components/ui/button';\n\nexport const Loader = () => {\n  return (\n    <Button className=\"my-4\" disabled>\n      <ReloadIcon className=\"mr-2 h-4 w-4 animate-spin\" />\n      Please wait\n    </Button>\n  );\n};\n","import { axios, baseOptions } from './api';\n\nconst fetchReviews = async movie_id => {\n  const { data } = await axios.get(\n    `/movie/${movie_id}/reviews?language=en-US`,\n    baseOptions\n  );\n\n  return data.results;\n};\n\nexport { fetchReviews };\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'rounded-xl border bg-card text-card-foreground shadow',\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('font-semibold leading-none tracking-tight', className)}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n","import { useParams } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { fetchReviews } from 'services/fetchReviews';\n\nimport { Loader } from './Loader';\n\nimport { format } from 'date-fns';\nimport ReactMarkdown from 'react-markdown';\nimport parse from 'html-react-parser';\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const { data, isLoading, error } = useQuery({\n    queryKey: ['reviews', movieId],\n    queryFn: () => fetchReviews(movieId),\n  });\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <div>Error fetching data: {error.message}</div>;\n  }\n\n  return (\n    <div className=\"flex flex-col w-full max-w-5xl items-start gap-4 py-8\">\n      {data.map(review => (\n        <ul key={review.id}>\n          <li>\n            <Card>\n              <CardHeader>\n                <CardTitle>{review.author}</CardTitle>\n                <CardDescription>\n                  {format(new Date(review.created_at), 'HH:mm, MMMM d, yyyy')}\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                {/<([A-Za-z][A-Za-z0-9]*)\\b[^>]*>(.*?)<\\/\\1>/.test(\n                  review.content\n                ) ? (\n                  <p>{parse(review.content)}</p>\n                ) : (\n                  <ReactMarkdown>{review.content}</ReactMarkdown>\n                )}\n              </CardContent>\n            </Card>\n          </li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["Loader","_jsxs","Button","className","disabled","children","_jsx","ReloadIcon","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie_id","_yield$axios$get","data","_context","prev","next","axios","concat","baseOptions","sent","abrupt","results","stop","_x","apply","arguments","Card","React","ref","props","_objectWithoutProperties","_excluded","_objectSpread","cn","displayName","CardHeader","_ref2","_excluded2","CardTitle","_ref3","_excluded3","CardDescription","_ref4","_excluded4","CardContent","_ref5","_excluded5","_ref6","_excluded6","movieId","useParams","_useQuery","useQuery","queryKey","queryFn","isLoading","error","message","map","review","author","format","Date","created_at","test","content","parse","ReactMarkdown","id","headers","accept","Authorization"],"sourceRoot":""}