{"version":3,"file":"static/js/370.4e4ee3f5.chunk.js","mappings":"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","sources":["services/searchMovies.js","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { axios, baseOptions } from './api';\n\nconst searchMovies = async queryParams => {\n  const options = {\n    ...baseOptions,\n    params: {\n      query: queryParams.query,\n      include_adult: queryParams.include_adult || false,\n      language: queryParams.language || 'en-US',\n      primary_release_year: queryParams.primary_release_year || '',\n      page: queryParams.page || 1,\n      region: queryParams.region || '',\n      year: queryParams.year || '',\n    },\n  };\n\n  try {\n    const response = await axios.get('/search/movie', options);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport { searchMovies };\n","import { useState, useRef, useEffect } from 'react';\nimport { searchMovies } from 'services/searchMovies';\nimport { useSearchParams, Link } from 'react-router-dom';\n\nconst Movies = () => {\n  const searchInputRef = useRef(null);\n  const yearInputRef = useRef(null);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSearch = async ({ query, year }) => {\n    try {\n      const searchData = await searchMovies({\n        query: query,\n        include_adult: false,\n        language: 'en-US',\n        primary_release_year: year,\n        page: 1,\n        region: '',\n        year: '',\n      });\n      setSearchResults(searchData.results);\n      setSearchParams({ query, ...(year && { year: year }) });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const q = searchParams.get('query') || '';\n    const year = searchParams.get('year') || '';\n    searchInputRef.current.value = q;\n    yearInputRef.current.value = year;\n  }, [searchParams]);\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          handleSearch({\n            query: searchInputRef.current.value.trim(),\n            year: yearInputRef.current.value.trim(),\n          });\n        }}\n      >\n        <input\n          type=\"text\"\n          ref={searchInputRef}\n          placeholder=\"Enter movie title...\"\n        />\n        <input\n          type=\"text\"\n          ref={yearInputRef}\n          placeholder=\"Enter release year...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <div>\n        {searchResults.map(movie => (\n          <Link to={`/movies/${movie.id}`} key={movie.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w342${movie.poster_path}`}\n              alt={movie.title || movie.name}\n            />\n            <h3>{movie.title || movie.name}</h3>\n            <h4>\n              {movie.release_date\n                ? new Date(movie.release_date).getFullYear()\n                : new Date(movie.first_air_date).getFullYear()}\n            </h4>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["searchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","queryParams","options","response","_context","prev","next","_objectSpread","baseOptions","params","query","include_adult","language","primary_release_year","page","region","year","axios","sent","abrupt","data","t0","console","error","stop","_x","apply","arguments","searchInputRef","useRef","yearInputRef","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","handleSearch","_ref2","searchData","results","useEffect","q","get","current","value","_jsxs","children","_jsx","onSubmit","e","preventDefault","trim","type","ref","placeholder","map","movie","Link","to","concat","id","src","poster_path","alt","title","name","release_date","Date","getFullYear","first_air_date","headers","accept","Authorization"],"sourceRoot":""}