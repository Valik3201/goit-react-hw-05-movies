{"version":3,"file":"static/js/783.04985e7a.chunk.js","mappings":"uQAEMA,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAQ,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACfC,EAAAA,EAAAA,IAAU,UAADC,OACpBP,EAAQ,mBAClBQ,EAAAA,GACA,KAAD,EAHW,OAGXP,EAAAE,EAAAM,KAHOP,EAAID,EAAJC,KAAIC,EAAAO,OAAA,SAKLR,GAAI,wBAAAC,EAAAQ,OAAA,GAAAZ,EAAA,KACZ,gBAPsBa,GAAA,OAAAhB,EAAAiB,MAAA,KAAAC,UAAA,K,SCiEvB,EA5DqB,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAA4CC,EAAAA,EAAAA,GAAS,CACnDC,SAAU,CAAC,eAAgBJ,GAC3BK,QAAS,kBAAMzB,EAAkBoB,EAAQ,IAFnCM,EAASJ,EAATI,UAAWC,EAAOL,EAAPK,QAASpB,EAAIe,EAAJf,KAAMqB,EAAKN,EAALM,MAKlC,OAAIF,GACKG,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAGVH,GACKI,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,wBAAsBF,EAAMI,YAIxCD,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACJC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,OACEI,IAAG,kCAAArB,OAAoCL,EAAK2B,aAC5CC,IAAK5B,EAAK6B,kBAEZP,EAAAA,EAAAA,KAAA,MAAAC,SAAKvB,EAAK6B,kBACVP,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAAA,KAAAC,SAAIvB,EAAK8B,aAGXR,EAAAA,EAAAA,KAAA,KAAAC,SAAIvB,EAAK+B,YAETT,EAAAA,EAAAA,KAAA,MAAAC,SAAI,WACHvB,EAAKgC,OAAOC,KAAI,SAAAC,GAAK,OACpBZ,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKW,EAAMC,QADJD,EAAME,GAEV,KAGPd,EAAAA,EAAAA,KAAA,MAAAC,SAAI,yBACHvB,EAAKqC,qBAAqBJ,KAAI,SAAAK,GAAO,OACpChB,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKe,EAAQH,QADNG,EAAQC,WAEZ,QAGTf,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAACC,GAAG,OAAMlB,SAAC,YAElBD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAACC,GAAG,UAASlB,SAAC,kBAGvBD,EAAAA,EAAAA,KAACoB,EAAAA,SAAQ,CAACC,UAAUrB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,uBAAyBA,UAChDD,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,QAIf,C,8FC/DAxC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAME,EAAc,CAClBuC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N","sources":["services/fetchMovieDetails.js","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { axios, baseOptions } from './api';\n\nconst fetchMovieDetails = async movie_id => {\n  const { data } = await axios.get(\n    `/movie/${movie_id}?language=en-US`,\n    baseOptions\n  );\n\n  return data;\n};\n\nexport { fetchMovieDetails };\n","import { useParams } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\n\nimport { fetchMovieDetails } from 'services/fetchMovieDetails';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const { isPending, isError, data, error } = useQuery({\n    queryKey: ['movieDetails', movieId],\n    queryFn: () => fetchMovieDetails(movieId),\n  });\n\n  if (isPending) {\n    return <div>Loading...</div>;\n  }\n\n  if (isError) {\n    return <div>Error fetching data: {error.message}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Movie Details</h1>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w342${data.poster_path}`}\n          alt={data.original_title}\n        />\n        <h1>{data.original_title}</h1>\n        <h5>\n          <i>{data.tagline}</i>\n        </h5>\n\n        <p>{data.overview}</p>\n\n        <h4>Genres</h4>\n        {data.genres.map(genre => (\n          <ul key={genre.id}>\n            <li>{genre.name}</li>\n          </ul>\n        ))}\n\n        <h4>Production Companies</h4>\n        {data.production_countries.map(country => (\n          <ul key={country.iso_3166_1}>\n            <li>{country.name}</li>\n          </ul>\n        ))}\n      </div>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie_id","_yield$axios$get","data","_context","prev","next","axios","concat","baseOptions","sent","abrupt","stop","_x","apply","arguments","movieId","useParams","_useQuery","useQuery","queryKey","queryFn","isPending","isError","error","_jsx","children","_jsxs","message","src","poster_path","alt","original_title","tagline","overview","genres","map","genre","name","id","production_countries","country","iso_3166_1","Link","to","Suspense","fallback","Outlet","headers","accept","Authorization"],"sourceRoot":""}