{"version":3,"file":"static/js/486.129f82df.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/domelementtype/lib/index.js","../node_modules/extend/index.js","../node_modules/html-dom-parser/src/client/constants.ts","../node_modules/html-dom-parser/src/client/domparser.ts","../node_modules/html-dom-parser/src/client/html-to-dom.ts","../node_modules/html-dom-parser/src/client/utilities.ts","../node_modules/html-dom-parser/node_modules/domhandler/lib/index.js","../node_modules/html-dom-parser/node_modules/domhandler/lib/node.js","../node_modules/html-react-parser/src/attributes-to-props.ts","../node_modules/html-react-parser/src/dom-to-react.ts","../node_modules/html-react-parser/src/index.ts","../node_modules/html-react-parser/src/utilities.ts","../node_modules/html-react-parser/node_modules/domhandler/lib/index.js","../node_modules/html-react-parser/node_modules/domhandler/lib/node.js","../node_modules/inline-style-parser/index.js","../node_modules/react-property/lib/index.js","../node_modules/react-property/lib/possibleStandardNamesOptimized.js","../node_modules/style-to-js/src/index.ts","../node_modules/style-to-js/src/utilities.ts","../node_modules/style-to-object/src/index.ts","../node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","../node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","../node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","../node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","../node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","../node_modules/date-fns/locale/en-US/_lib/localize.mjs","../node_modules/date-fns/locale/_lib/buildMatchFn.mjs","../node_modules/date-fns/locale/en-US/_lib/match.mjs","../node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","../node_modules/date-fns/locale/en-US.mjs","../node_modules/date-fns/_lib/defaultOptions.mjs","../node_modules/date-fns/constants.mjs","../node_modules/date-fns/toDate.mjs","../node_modules/date-fns/startOfDay.mjs","../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","../node_modules/date-fns/differenceInCalendarDays.mjs","../node_modules/date-fns/constructFrom.mjs","../node_modules/date-fns/startOfYear.mjs","../node_modules/date-fns/getDayOfYear.mjs","../node_modules/date-fns/startOfWeek.mjs","../node_modules/date-fns/startOfISOWeek.mjs","../node_modules/date-fns/getISOWeekYear.mjs","../node_modules/date-fns/startOfISOWeekYear.mjs","../node_modules/date-fns/getISOWeek.mjs","../node_modules/date-fns/getWeekYear.mjs","../node_modules/date-fns/startOfWeekYear.mjs","../node_modules/date-fns/getWeek.mjs","../node_modules/date-fns/_lib/addLeadingZeros.mjs","../node_modules/date-fns/_lib/format/lightFormatters.mjs","../node_modules/date-fns/_lib/format/formatters.mjs","../node_modules/date-fns/_lib/format/longFormatters.mjs","../node_modules/date-fns/_lib/protectedTokens.mjs","../node_modules/date-fns/isDate.mjs","../node_modules/date-fns/isValid.mjs","../node_modules/date-fns/format.mjs","../node_modules/html-react-parser/esm/index.mjs","../node_modules/estree-util-is-identifier-name/lib/index.js","../node_modules/hast-util-whitespace/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/esm/index.mjs","../node_modules/unist-util-position/lib/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/hast-util-to-jsx-runtime/lib/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/html-url-attributes/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/react-markdown/lib/index.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Doctype = exports.CDATA = exports.Tag = exports.Style = exports.Script = exports.Comment = exports.Directive = exports.Text = exports.Root = exports.isTag = exports.ElementType = void 0;\n/** Types of elements found in htmlparser2's DOM */\nvar ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType = exports.ElementType || (exports.ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nfunction isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\nexports.isTag = isTag;\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexports.Root = ElementType.Root;\n/** Type for Text */\nexports.Text = ElementType.Text;\n/** Type for <? ... ?> */\nexports.Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexports.Comment = ElementType.Comment;\n/** Type for <script> tags */\nexports.Script = ElementType.Script;\n/** Type for <style> tags */\nexports.Style = ElementType.Style;\n/** Type for Any tag */\nexports.Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexports.CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexports.Doctype = ElementType.Doctype;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/**\n * SVG elements are case-sensitive.\n *\n * @see https://developer.mozilla.org/docs/Web/SVG/Element#svg_elements_a_to_z\n */\nexport const CASE_SENSITIVE_TAG_NAMES = [\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'linearGradient',\n  'radialGradient',\n  'textPath',\n] as const;\n\nexport const CASE_SENSITIVE_TAG_NAMES_MAP = CASE_SENSITIVE_TAG_NAMES.reduce(\n  (accumulator, tagName) => {\n    accumulator[tagName.toLowerCase()] = tagName;\n    return accumulator;\n  },\n  {} as Record<string, string>,\n);\n","// constants\nconst HTML = 'html';\nconst HEAD = 'head';\nconst BODY = 'body';\nconst FIRST_TAG_REGEX = /<([a-zA-Z]+[0-9]?)/; // e.g., <h1>\n\n// match-all-characters in case of newlines (DOTALL)\nconst HEAD_TAG_REGEX = /<head[^]*>/i;\nconst BODY_TAG_REGEX = /<body[^]*>/i;\n\n// falls back to `parseFromString` if `createHTMLDocument` cannot be used\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nlet parseFromDocument = (html: string, tagName?: string): Document => {\n  /* istanbul ignore next */\n  throw new Error(\n    'This browser does not support `document.implementation.createHTMLDocument`',\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nlet parseFromString = (html: string, tagName?: string): Document => {\n  /* istanbul ignore next */\n  throw new Error(\n    'This browser does not support `DOMParser.prototype.parseFromString`',\n  );\n};\n\nconst DOMParser = typeof window === 'object' && window.DOMParser;\n\n/**\n * DOMParser (performance: slow).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMParser#Parsing_an_SVG_or_HTML_document\n */\nif (typeof DOMParser === 'function') {\n  const domParser = new DOMParser();\n  const mimeType = 'text/html';\n\n  /**\n   * Creates an HTML document using `DOMParser.parseFromString`.\n   *\n   * @param html - The HTML string.\n   * @param tagName - The element to render the HTML (with 'body' as fallback).\n   * @returns - Document.\n   */\n  parseFromString = (html: string, tagName?: string): Document => {\n    if (tagName) {\n      /* istanbul ignore next */\n      html = `<${tagName}>${html}</${tagName}>`;\n    }\n\n    return domParser.parseFromString(html, mimeType);\n  };\n\n  parseFromDocument = parseFromString;\n}\n\n/**\n * DOMImplementation (performance: fair).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMImplementation/createHTMLDocument\n */\nif (typeof document === 'object' && document.implementation) {\n  const htmlDocument = document.implementation.createHTMLDocument();\n\n  /**\n   * Use HTML document created by `document.implementation.createHTMLDocument`.\n   *\n   * @param html - The HTML string.\n   * @param tagName - The element to render the HTML (with 'body' as fallback).\n   * @returns - Document\n   */\n  parseFromDocument = function (html: string, tagName?: string): Document {\n    if (tagName) {\n      const element = htmlDocument.documentElement.querySelector(tagName);\n\n      if (element) {\n        element.innerHTML = html;\n      }\n\n      return htmlDocument;\n    }\n\n    htmlDocument.documentElement.innerHTML = html;\n    return htmlDocument;\n  };\n}\n\n/**\n * Template (performance: fast).\n *\n * @see https://developer.mozilla.org/docs/Web/HTML/Element/template\n */\nconst template =\n  typeof document === 'object' && document.createElement('template');\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nlet parseFromTemplate: (html: string) => NodeList;\n\nif (template && template.content) {\n  /**\n   * Uses a template element (content fragment) to parse HTML.\n   *\n   * @param html - HTML string.\n   * @returns - Nodes.\n   */\n  parseFromTemplate = (html: string): NodeList => {\n    template.innerHTML = html;\n    return template.content.childNodes;\n  };\n}\n\n/**\n * Parses HTML string to DOM nodes.\n *\n * @param html - HTML markup.\n * @returns - DOM nodes.\n */\nexport default function domparser(html: string): NodeList {\n  const match = html.match(FIRST_TAG_REGEX);\n  const firstTagName = match && match[1] ? match[1].toLowerCase() : '';\n\n  switch (firstTagName) {\n    case HTML: {\n      const doc = parseFromString(html);\n\n      // the created document may come with filler head/body elements,\n      // so make sure to remove them if they don't actually exist\n      if (!HEAD_TAG_REGEX.test(html)) {\n        const element = doc.querySelector(HEAD);\n        element?.parentNode?.removeChild(element);\n      }\n\n      if (!BODY_TAG_REGEX.test(html)) {\n        const element = doc.querySelector(BODY);\n        element?.parentNode?.removeChild(element);\n      }\n\n      return doc.querySelectorAll(HTML);\n    }\n\n    case HEAD:\n    case BODY: {\n      const elements = parseFromDocument(html).querySelectorAll(firstTagName);\n\n      // if there's a sibling element, then return both elements\n      if (BODY_TAG_REGEX.test(html) && HEAD_TAG_REGEX.test(html)) {\n        return elements[0].parentNode!.childNodes;\n      }\n\n      return elements;\n    }\n\n    // low-level tag or text\n    default: {\n      if (parseFromTemplate) {\n        return parseFromTemplate(html);\n      }\n      const element = parseFromDocument(html, BODY).querySelector(BODY);\n      return element!.childNodes;\n    }\n  }\n}\n","import domparser from './domparser';\nimport { formatDOM } from './utilities';\n\nconst DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\n\n/**\n * Parses HTML string to DOM nodes in browser.\n *\n * @param html - HTML markup.\n * @returns - DOM elements.\n */\nexport default function HTMLDOMParser(html: string) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!html) {\n    return [];\n  }\n\n  // match directive\n  const match = html.match(DIRECTIVE_REGEX);\n  const directive = match ? match[1] : undefined;\n\n  return formatDOM(domparser(html), null, directive);\n}\n","import { Comment, Element, ProcessingInstruction, Text } from 'domhandler';\n\nimport { CASE_SENSITIVE_TAG_NAMES_MAP } from './constants';\nimport type { DOMNode } from '../types';\n\n/**\n * Gets case-sensitive tag name.\n *\n * @param tagName - Tag name in lowercase.\n * @returns - Case-sensitive tag name.\n */\nfunction getCaseSensitiveTagName(tagName: string): string | undefined {\n  return CASE_SENSITIVE_TAG_NAMES_MAP[tagName];\n}\n\n/**\n * Formats DOM attributes to a hash map.\n *\n * @param attributes - List of attributes.\n * @returns - Map of attribute name to value.\n */\nexport function formatAttributes(attributes: NamedNodeMap) {\n  const map: Record<string, string> = {};\n  let index = 0;\n  const attributesLength = attributes.length;\n\n  // `NamedNodeMap` is array-like\n  for (; index < attributesLength; index++) {\n    const attribute = attributes[index];\n    map[attribute.name] = attribute.value;\n  }\n\n  return map;\n}\n\n/**\n * Corrects the tag name if it is case-sensitive (SVG).\n * Otherwise, returns the lowercase tag name (HTML).\n *\n * @param tagName - Lowercase tag name.\n * @returns - Formatted tag name.\n */\nfunction formatTagName(tagName: string): string {\n  tagName = tagName.toLowerCase();\n  const caseSensitiveTagName = getCaseSensitiveTagName(tagName);\n\n  if (caseSensitiveTagName) {\n    return caseSensitiveTagName;\n  }\n\n  return tagName;\n}\n\n/**\n * Transforms DOM nodes to `domhandler` nodes.\n *\n * @param nodes - DOM nodes.\n * @param parent - Parent node.\n * @param directive - Directive.\n * @returns - Nodes.\n */\nexport function formatDOM(\n  nodes: NodeList,\n  parent: DOMNode | null = null,\n  directive?: string,\n): DOMNode[] {\n  const domNodes = [];\n  let current;\n  let index = 0;\n  const nodesLength = nodes.length;\n\n  for (; index < nodesLength; index++) {\n    const node = nodes[index];\n\n    // set the node data given the type\n    switch (node.nodeType) {\n      case 1: {\n        const tagName = formatTagName(node.nodeName);\n\n        // script, style, or tag\n        current = new Element(\n          tagName,\n          formatAttributes((node as HTMLElement).attributes),\n        );\n\n        current.children = formatDOM(\n          // template children are on content\n          tagName === 'template'\n            ? (node as HTMLTemplateElement).content.childNodes\n            : node.childNodes,\n          current,\n        );\n\n        break;\n      }\n\n      case 3:\n        current = new Text(node.nodeValue!);\n        break;\n\n      case 8:\n        current = new Comment(node.nodeValue!);\n        break;\n\n      default:\n        continue;\n    }\n\n    // set previous node next\n    const prev = domNodes[index - 1] || null;\n    if (prev) {\n      prev.next = current;\n    }\n\n    // set properties for current node\n    current.parent = parent as Element;\n    current.prev = prev;\n    current.next = null;\n\n    domNodes.push(current);\n  }\n\n  if (directive) {\n    current = new ProcessingInstruction(\n      directive.substring(0, directive.indexOf(' ')).toLowerCase(),\n      directive,\n    );\n\n    current.next = domNodes[0] || null;\n    current.parent = parent as Element;\n    domNodes.unshift(current);\n\n    if (domNodes[1]) {\n      domNodes[1].prev = domNodes[0];\n    }\n  }\n\n  return domNodes;\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DomHandler = void 0;\nvar domelementtype_1 = require(\"domelementtype\");\nvar node_js_1 = require(\"./node.js\");\n__exportStar(require(\"./node.js\"), exports);\n// Default options\nvar defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nvar DomHandler = /** @class */ (function () {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    function DomHandler(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new node_js_1.Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    DomHandler.prototype.onparserinit = function (parser) {\n        this.parser = parser;\n    };\n    // Resets the handler back to starting state\n    DomHandler.prototype.onreset = function () {\n        this.dom = [];\n        this.root = new node_js_1.Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    };\n    // Signals the handler that parsing is done\n    DomHandler.prototype.onend = function () {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    };\n    DomHandler.prototype.onerror = function (error) {\n        this.handleCallback(error);\n    };\n    DomHandler.prototype.onclosetag = function () {\n        this.lastNode = null;\n        var elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    };\n    DomHandler.prototype.onopentag = function (name, attribs) {\n        var type = this.options.xmlMode ? domelementtype_1.ElementType.Tag : undefined;\n        var element = new node_js_1.Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    };\n    DomHandler.prototype.ontext = function (data) {\n        var lastNode = this.lastNode;\n        if (lastNode && lastNode.type === domelementtype_1.ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            var node = new node_js_1.Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    };\n    DomHandler.prototype.oncomment = function (data) {\n        if (this.lastNode && this.lastNode.type === domelementtype_1.ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        var node = new node_js_1.Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    };\n    DomHandler.prototype.oncommentend = function () {\n        this.lastNode = null;\n    };\n    DomHandler.prototype.oncdatastart = function () {\n        var text = new node_js_1.Text(\"\");\n        var node = new node_js_1.CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    };\n    DomHandler.prototype.oncdataend = function () {\n        this.lastNode = null;\n    };\n    DomHandler.prototype.onprocessinginstruction = function (name, data) {\n        var node = new node_js_1.ProcessingInstruction(name, data);\n        this.addNode(node);\n    };\n    DomHandler.prototype.handleCallback = function (error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    };\n    DomHandler.prototype.addNode = function (node) {\n        var parent = this.tagStack[this.tagStack.length - 1];\n        var previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    };\n    return DomHandler;\n}());\nexports.DomHandler = DomHandler;\nexports.default = DomHandler;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneNode = exports.hasChildren = exports.isDocument = exports.isDirective = exports.isComment = exports.isText = exports.isCDATA = exports.isTag = exports.Element = exports.Document = exports.CDATA = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;\nvar domelementtype_1 = require(\"domelementtype\");\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nvar Node = /** @class */ (function () {\n    function Node() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    Object.defineProperty(Node.prototype, \"parentNode\", {\n        // Read-write aliases for properties\n        /**\n         * Same as {@link parent}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.parent;\n        },\n        set: function (parent) {\n            this.parent = parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"previousSibling\", {\n        /**\n         * Same as {@link prev}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.prev;\n        },\n        set: function (prev) {\n            this.prev = prev;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"nextSibling\", {\n        /**\n         * Same as {@link next}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.next;\n        },\n        set: function (next) {\n            this.next = next;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    Node.prototype.cloneNode = function (recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return cloneNode(this, recursive);\n    };\n    return Node;\n}());\nexports.Node = Node;\n/**\n * A node that contains some data.\n */\nvar DataNode = /** @class */ (function (_super) {\n    __extends(DataNode, _super);\n    /**\n     * @param data The content of the data node\n     */\n    function DataNode(data) {\n        var _this = _super.call(this) || this;\n        _this.data = data;\n        return _this;\n    }\n    Object.defineProperty(DataNode.prototype, \"nodeValue\", {\n        /**\n         * Same as {@link data}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (data) {\n            this.data = data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return DataNode;\n}(Node));\nexports.DataNode = DataNode;\n/**\n * Text within the document.\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = domelementtype_1.ElementType.Text;\n        return _this;\n    }\n    Object.defineProperty(Text.prototype, \"nodeType\", {\n        get: function () {\n            return 3;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Text;\n}(DataNode));\nexports.Text = Text;\n/**\n * Comments within the document.\n */\nvar Comment = /** @class */ (function (_super) {\n    __extends(Comment, _super);\n    function Comment() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = domelementtype_1.ElementType.Comment;\n        return _this;\n    }\n    Object.defineProperty(Comment.prototype, \"nodeType\", {\n        get: function () {\n            return 8;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Comment;\n}(DataNode));\nexports.Comment = Comment;\n/**\n * Processing instructions, including doc types.\n */\nvar ProcessingInstruction = /** @class */ (function (_super) {\n    __extends(ProcessingInstruction, _super);\n    function ProcessingInstruction(name, data) {\n        var _this = _super.call(this, data) || this;\n        _this.name = name;\n        _this.type = domelementtype_1.ElementType.Directive;\n        return _this;\n    }\n    Object.defineProperty(ProcessingInstruction.prototype, \"nodeType\", {\n        get: function () {\n            return 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ProcessingInstruction;\n}(DataNode));\nexports.ProcessingInstruction = ProcessingInstruction;\n/**\n * A `Node` that can have children.\n */\nvar NodeWithChildren = /** @class */ (function (_super) {\n    __extends(NodeWithChildren, _super);\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    function NodeWithChildren(children) {\n        var _this = _super.call(this) || this;\n        _this.children = children;\n        return _this;\n    }\n    Object.defineProperty(NodeWithChildren.prototype, \"firstChild\", {\n        // Aliases\n        /** First child of the node. */\n        get: function () {\n            var _a;\n            return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeWithChildren.prototype, \"lastChild\", {\n        /** Last child of the node. */\n        get: function () {\n            return this.children.length > 0\n                ? this.children[this.children.length - 1]\n                : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeWithChildren.prototype, \"childNodes\", {\n        /**\n         * Same as {@link children}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.children;\n        },\n        set: function (children) {\n            this.children = children;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return NodeWithChildren;\n}(Node));\nexports.NodeWithChildren = NodeWithChildren;\nvar CDATA = /** @class */ (function (_super) {\n    __extends(CDATA, _super);\n    function CDATA() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = domelementtype_1.ElementType.CDATA;\n        return _this;\n    }\n    Object.defineProperty(CDATA.prototype, \"nodeType\", {\n        get: function () {\n            return 4;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CDATA;\n}(NodeWithChildren));\nexports.CDATA = CDATA;\n/**\n * The root node of the document.\n */\nvar Document = /** @class */ (function (_super) {\n    __extends(Document, _super);\n    function Document() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = domelementtype_1.ElementType.Root;\n        return _this;\n    }\n    Object.defineProperty(Document.prototype, \"nodeType\", {\n        get: function () {\n            return 9;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Document;\n}(NodeWithChildren));\nexports.Document = Document;\n/**\n * An element within the DOM.\n */\nvar Element = /** @class */ (function (_super) {\n    __extends(Element, _super);\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    function Element(name, attribs, children, type) {\n        if (children === void 0) { children = []; }\n        if (type === void 0) { type = name === \"script\"\n            ? domelementtype_1.ElementType.Script\n            : name === \"style\"\n                ? domelementtype_1.ElementType.Style\n                : domelementtype_1.ElementType.Tag; }\n        var _this = _super.call(this, children) || this;\n        _this.name = name;\n        _this.attribs = attribs;\n        _this.type = type;\n        return _this;\n    }\n    Object.defineProperty(Element.prototype, \"nodeType\", {\n        get: function () {\n            return 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"tagName\", {\n        // DOM Level 1 aliases\n        /**\n         * Same as {@link name}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.name;\n        },\n        set: function (name) {\n            this.name = name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"attributes\", {\n        get: function () {\n            var _this = this;\n            return Object.keys(this.attribs).map(function (name) {\n                var _a, _b;\n                return ({\n                    name: name,\n                    value: _this.attribs[name],\n                    namespace: (_a = _this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                    prefix: (_b = _this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n                });\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Element;\n}(NodeWithChildren));\nexports.Element = Element;\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nfunction isTag(node) {\n    return (0, domelementtype_1.isTag)(node);\n}\nexports.isTag = isTag;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nfunction isCDATA(node) {\n    return node.type === domelementtype_1.ElementType.CDATA;\n}\nexports.isCDATA = isCDATA;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nfunction isText(node) {\n    return node.type === domelementtype_1.ElementType.Text;\n}\nexports.isText = isText;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nfunction isComment(node) {\n    return node.type === domelementtype_1.ElementType.Comment;\n}\nexports.isComment = isComment;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDirective(node) {\n    return node.type === domelementtype_1.ElementType.Directive;\n}\nexports.isDirective = isDirective;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDocument(node) {\n    return node.type === domelementtype_1.ElementType.Root;\n}\nexports.isDocument = isDocument;\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nfunction hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\nexports.hasChildren = hasChildren;\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nfunction cloneNode(node, recursive) {\n    if (recursive === void 0) { recursive = false; }\n    var result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        var children = recursive ? cloneChildren(node.children) : [];\n        var clone_1 = new Element(node.name, __assign({}, node.attribs), children);\n        children.forEach(function (child) { return (child.parent = clone_1); });\n        if (node.namespace != null) {\n            clone_1.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone_1[\"x-attribsNamespace\"] = __assign({}, node[\"x-attribsNamespace\"]);\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone_1[\"x-attribsPrefix\"] = __assign({}, node[\"x-attribsPrefix\"]);\n        }\n        result = clone_1;\n    }\n    else if (isCDATA(node)) {\n        var children = recursive ? cloneChildren(node.children) : [];\n        var clone_2 = new CDATA(children);\n        children.forEach(function (child) { return (child.parent = clone_2); });\n        result = clone_2;\n    }\n    else if (isDocument(node)) {\n        var children = recursive ? cloneChildren(node.children) : [];\n        var clone_3 = new Document(children);\n        children.forEach(function (child) { return (child.parent = clone_3); });\n        if (node[\"x-mode\"]) {\n            clone_3[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone_3;\n    }\n    else if (isDirective(node)) {\n        var instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(\"Not implemented yet: \".concat(node.type));\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nexports.cloneNode = cloneNode;\nfunction cloneChildren(childs) {\n    var children = childs.map(function (child) { return cloneNode(child, true); });\n    for (var i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n","import {\n  BOOLEAN,\n  OVERLOADED_BOOLEAN,\n  getPropertyInfo,\n  isCustomAttribute,\n  possibleStandardNames,\n} from 'react-property';\nimport { PRESERVE_CUSTOM_ATTRIBUTES, setStyleProp } from './utilities';\n\n// https://react.dev/learn/sharing-state-between-components#controlled-and-uncontrolled-components\n// https://developer.mozilla.org/docs/Web/HTML/Attributes\nconst UNCONTROLLED_COMPONENT_ATTRIBUTES = ['checked', 'value'] as const;\nconst UNCONTROLLED_COMPONENT_NAMES = ['input', 'select', 'textarea'] as const;\n\ntype UncontrolledComponentAttributes =\n  (typeof UNCONTROLLED_COMPONENT_ATTRIBUTES)[number];\n\ntype UncontrolledComponentNames = (typeof UNCONTROLLED_COMPONENT_NAMES)[number];\n\nconst valueOnlyInputs = {\n  reset: true,\n  submit: true,\n} as const;\n\nexport type ValueOnlyInputsKeys = keyof typeof valueOnlyInputs;\n\nexport type Attributes = Record<PropertyKey, string>;\n\nexport type Props = Record<PropertyKey, string | boolean> & {\n  dangerouslySetInnerHTML?: {\n    __html: string;\n  };\n  key?: string | number;\n  style?: Record<PropertyKey, string>;\n};\n\n/**\n * Converts HTML/SVG DOM attributes to React props.\n *\n * @param attributes - HTML/SVG DOM attributes.\n * @param nodeName - DOM node name.\n * @returns - React props.\n */\nexport default function attributesToProps(\n  attributes: Attributes = {},\n  nodeName?: string,\n): Props {\n  const props: Props = {};\n\n  const isInputValueOnly = Boolean(\n    attributes.type && valueOnlyInputs[attributes.type as ValueOnlyInputsKeys],\n  );\n\n  for (const attributeName in attributes) {\n    const attributeValue = attributes[attributeName];\n\n    // ARIA (aria-*) or custom data (data-*) attribute\n    if (isCustomAttribute(attributeName)) {\n      props[attributeName] = attributeValue;\n      continue;\n    }\n\n    // convert HTML/SVG attribute to React prop\n    const attributeNameLowerCased = attributeName.toLowerCase();\n    let propName = getPropName(attributeNameLowerCased);\n\n    if (propName) {\n      const propertyInfo = getPropertyInfo(propName);\n\n      // convert attribute to uncontrolled component prop (e.g., `value` to `defaultValue`)\n      if (\n        UNCONTROLLED_COMPONENT_ATTRIBUTES.includes(\n          propName as UncontrolledComponentAttributes,\n        ) &&\n        UNCONTROLLED_COMPONENT_NAMES.includes(\n          nodeName! as UncontrolledComponentNames,\n        ) &&\n        !isInputValueOnly\n      ) {\n        propName = getPropName('default' + attributeNameLowerCased);\n      }\n\n      props[propName] = attributeValue;\n\n      switch (propertyInfo && propertyInfo.type) {\n        case BOOLEAN:\n          props[propName] = true;\n          break;\n        case OVERLOADED_BOOLEAN:\n          if (attributeValue === '') {\n            props[propName] = true;\n          }\n          break;\n      }\n      continue;\n    }\n\n    // preserve custom attribute if React >=16\n    if (PRESERVE_CUSTOM_ATTRIBUTES) {\n      props[attributeName] = attributeValue;\n    }\n  }\n\n  // transform inline style to object\n  setStyleProp(attributes.style, props);\n\n  return props;\n}\n\n/**\n * Gets prop name from lowercased attribute name.\n *\n * @param attributeName - Lowercased attribute name.\n * @returns - Prop name.\n */\nfunction getPropName(attributeName: string): string {\n  return possibleStandardNames[attributeName];\n}\n","import { cloneElement, createElement, isValidElement } from 'react';\nimport type { Element, DOMNode, Text } from 'html-dom-parser';\n\nimport attributesToProps from './attributes-to-props';\nimport type { Props } from './attributes-to-props';\nimport {\n  PRESERVE_CUSTOM_ATTRIBUTES,\n  canTextBeChildOfNode,\n  isCustomComponent,\n  returnFirstArg,\n  setStyleProp,\n} from './utilities';\n\nimport type { HTMLReactParserOptions } from './types';\n\nconst React = {\n  cloneElement,\n  createElement,\n  isValidElement,\n} as const;\n\n/**\n * Converts DOM nodes to JSX element(s).\n *\n * @param nodes - DOM nodes.\n * @param options - Options.\n * @returns - String or JSX element(s).\n */\nexport default function domToReact(\n  nodes: DOMNode[],\n  options?: HTMLReactParserOptions,\n): string | JSX.Element | JSX.Element[] {\n  const reactElements = [];\n\n  const hasReplace = typeof options?.replace === 'function';\n  const transform = options?.transform || returnFirstArg;\n  const { cloneElement, createElement, isValidElement } =\n    options?.library || React;\n\n  const nodesLength = nodes.length;\n\n  for (let index = 0; index < nodesLength; index++) {\n    const node = nodes[index];\n\n    // replace with custom React element (if present)\n    if (hasReplace) {\n      let replaceElement = options.replace!(node, index) as JSX.Element;\n\n      if (isValidElement(replaceElement)) {\n        // set \"key\" prop for sibling elements\n        // https://react.dev/learn/rendering-lists#rules-of-keys\n        if (nodesLength > 1) {\n          replaceElement = cloneElement(replaceElement, {\n            key: replaceElement.key || index,\n          });\n        }\n\n        reactElements.push(transform(replaceElement, node, index));\n        continue;\n      }\n    }\n\n    if (node.type === 'text') {\n      const isWhitespace = !node.data.trim().length;\n\n      // We have a whitespace node that can't be nested in its parent\n      // so skip it\n      if (\n        isWhitespace &&\n        node.parent &&\n        !canTextBeChildOfNode(node.parent as Element)\n      ) {\n        continue;\n      }\n\n      // Trim is enabled and we have a whitespace node\n      // so skip it\n      if (options?.trim && isWhitespace) {\n        continue;\n      }\n\n      // We have a text node that's not whitespace and it can be nested\n      // in its parent so add it to the results\n      reactElements.push(transform(node.data, node, index));\n      continue;\n    }\n\n    const element = node as Element;\n    let props: Props = {};\n\n    if (skipAttributesToProps(element)) {\n      setStyleProp(element.attribs.style, element.attribs);\n      props = element.attribs;\n    } else if (element.attribs) {\n      props = attributesToProps(element.attribs, element.name);\n    }\n\n    let children: ReturnType<typeof domToReact> | undefined;\n\n    switch (node.type) {\n      case 'script':\n      case 'style':\n        // prevent text in <script> or <style> from being escaped\n        // https://react.dev/reference/react-dom/components/common#dangerously-setting-the-inner-html\n        if (node.children[0]) {\n          props.dangerouslySetInnerHTML = {\n            __html: (node.children[0] as Text).data,\n          };\n        }\n        break;\n\n      case 'tag':\n        // setting textarea value in children is an antipattern in React\n        // https://react.dev/reference/react-dom/components/textarea#caveats\n        if (node.name === 'textarea' && node.children[0]) {\n          props.defaultValue = (node.children[0] as Text).data;\n        } else if (node.children && node.children.length) {\n          // continue recursion of creating React elements (if applicable)\n          children = domToReact(node.children as Text[], options);\n        }\n        break;\n\n      // skip all other cases (e.g., comment)\n      default:\n        continue;\n    }\n\n    // set \"key\" prop for sibling elements\n    // https://react.dev/learn/rendering-lists#rules-of-keys\n    if (nodesLength > 1) {\n      props.key = index;\n    }\n\n    reactElements.push(\n      transform(createElement(node.name, props, children), node, index),\n    );\n  }\n\n  return reactElements.length === 1 ? reactElements[0] : reactElements;\n}\n\n/**\n * Determines whether DOM element attributes should be transformed to props.\n * Web Components should not have their attributes transformed except for `style`.\n *\n * @param node - Element node.\n * @returns - Whether the node attributes should be converted to props.\n */\nfunction skipAttributesToProps(node: Element): boolean {\n  return (\n    PRESERVE_CUSTOM_ATTRIBUTES &&\n    node.type === 'tag' &&\n    isCustomComponent(node.name, node.attribs)\n  );\n}\n","import htmlToDOM from 'html-dom-parser';\n\nimport attributesToProps from './attributes-to-props';\nimport domToReact from './dom-to-react';\nimport type { HTMLReactParserOptions } from './types';\n\nexport { Comment, Element, ProcessingInstruction, Text } from 'domhandler';\nexport type { DOMNode } from 'html-dom-parser';\n\nexport { HTMLReactParserOptions, attributesToProps, domToReact, htmlToDOM };\n\nconst domParserOptions = { lowerCaseAttributeNames: false } as const;\n\n/**\n * Converts HTML string to React elements.\n *\n * @param html - HTML string.\n * @param options - Parser options.\n * @returns - React element(s), empty array, or string.\n */\nexport default function HTMLReactParser(\n  html: string,\n  options?: HTMLReactParserOptions,\n): ReturnType<typeof domToReact> {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!html) {\n    return [];\n  }\n\n  return domToReact(\n    htmlToDOM(html, options?.htmlparser2 || domParserOptions),\n    options,\n  );\n}\n","import { version } from 'react';\nimport StyleToJS from 'style-to-js';\nimport type { Element } from 'html-dom-parser';\n\nimport type { Props } from './attributes-to-props';\n\nconst RESERVED_SVG_MATHML_ELEMENTS = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n] as const);\n\ntype ReservedSvgMathmlElements =\n  typeof RESERVED_SVG_MATHML_ELEMENTS extends Set<infer T> ? T : never;\n\n/**\n * Check if a tag is a custom component.\n *\n * @see {@link https://github.com/facebook/react/blob/v16.6.3/packages/react-dom/src/shared/isCustomComponent.js}\n *\n * @param tagName - Tag name.\n * @param props - Props passed to the element.\n * @returns - Whether the tag is custom component.\n */\nexport function isCustomComponent(\n  tagName: string,\n  props?: Record<PropertyKey, string>,\n): boolean {\n  if (!tagName.includes('-')) {\n    return Boolean(props && typeof props.is === 'string');\n  }\n\n  // These are reserved SVG and MathML elements.\n  // We don't mind this whitelist too much because we expect it to never grow.\n  // The alternative is to track the namespace in a few places which is convoluted.\n  // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n  if (RESERVED_SVG_MATHML_ELEMENTS.has(tagName as ReservedSvgMathmlElements)) {\n    return false;\n  }\n\n  return true;\n}\n\nconst styleOptions = {\n  reactCompat: true,\n} as const;\n\n/**\n * Sets style prop.\n *\n * @param style - Inline style.\n * @param props - Props object.\n */\nexport function setStyleProp(style: string, props: Props): void {\n  if (typeof style !== 'string') {\n    return;\n  }\n\n  if (!style.trim()) {\n    props.style = {};\n    return;\n  }\n\n  try {\n    props.style = StyleToJS(style, styleOptions);\n  } catch (error) {\n    props.style = {};\n  }\n}\n\n/**\n * @see https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html\n */\nexport const PRESERVE_CUSTOM_ATTRIBUTES = Number(version.split('.')[0]) >= 16;\n\n/**\n * @see https://github.com/facebook/react/blob/cae635054e17a6f107a39d328649137b83f25972/packages/react-dom/src/client/validateDOMNesting.js#L213\n */\nexport const ELEMENTS_WITH_NO_TEXT_CHILDREN = new Set([\n  'tr',\n  'tbody',\n  'thead',\n  'tfoot',\n  'colgroup',\n  'table',\n  'head',\n  'html',\n  'frameset',\n] as const);\n\ntype ElementsWithNoTextChildren =\n  typeof ELEMENTS_WITH_NO_TEXT_CHILDREN extends Set<infer T> ? T : never;\n\n/**\n * Checks if the given node can contain text nodes\n *\n * @param node - Element node.\n * @returns - Whether the node can contain text nodes.\n */\nexport const canTextBeChildOfNode = (node: Element) =>\n  !ELEMENTS_WITH_NO_TEXT_CHILDREN.has(node.name as ElementsWithNoTextChildren);\n\n/**\n * Returns the first argument as is.\n *\n * @param arg - The argument to be returned.\n * @returns - The input argument `arg`.\n */\nexport const returnFirstArg = (arg: any) => arg;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DomHandler = void 0;\nvar domelementtype_1 = require(\"domelementtype\");\nvar node_js_1 = require(\"./node.js\");\n__exportStar(require(\"./node.js\"), exports);\n// Default options\nvar defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nvar DomHandler = /** @class */ (function () {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    function DomHandler(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new node_js_1.Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    DomHandler.prototype.onparserinit = function (parser) {\n        this.parser = parser;\n    };\n    // Resets the handler back to starting state\n    DomHandler.prototype.onreset = function () {\n        this.dom = [];\n        this.root = new node_js_1.Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    };\n    // Signals the handler that parsing is done\n    DomHandler.prototype.onend = function () {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    };\n    DomHandler.prototype.onerror = function (error) {\n        this.handleCallback(error);\n    };\n    DomHandler.prototype.onclosetag = function () {\n        this.lastNode = null;\n        var elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    };\n    DomHandler.prototype.onopentag = function (name, attribs) {\n        var type = this.options.xmlMode ? domelementtype_1.ElementType.Tag : undefined;\n        var element = new node_js_1.Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    };\n    DomHandler.prototype.ontext = function (data) {\n        var lastNode = this.lastNode;\n        if (lastNode && lastNode.type === domelementtype_1.ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            var node = new node_js_1.Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    };\n    DomHandler.prototype.oncomment = function (data) {\n        if (this.lastNode && this.lastNode.type === domelementtype_1.ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        var node = new node_js_1.Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    };\n    DomHandler.prototype.oncommentend = function () {\n        this.lastNode = null;\n    };\n    DomHandler.prototype.oncdatastart = function () {\n        var text = new node_js_1.Text(\"\");\n        var node = new node_js_1.CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    };\n    DomHandler.prototype.oncdataend = function () {\n        this.lastNode = null;\n    };\n    DomHandler.prototype.onprocessinginstruction = function (name, data) {\n        var node = new node_js_1.ProcessingInstruction(name, data);\n        this.addNode(node);\n    };\n    DomHandler.prototype.handleCallback = function (error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    };\n    DomHandler.prototype.addNode = function (node) {\n        var parent = this.tagStack[this.tagStack.length - 1];\n        var previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    };\n    return DomHandler;\n}());\nexports.DomHandler = DomHandler;\nexports.default = DomHandler;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneNode = exports.hasChildren = exports.isDocument = exports.isDirective = exports.isComment = exports.isText = exports.isCDATA = exports.isTag = exports.Element = exports.Document = exports.CDATA = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;\nvar domelementtype_1 = require(\"domelementtype\");\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nvar Node = /** @class */ (function () {\n    function Node() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    Object.defineProperty(Node.prototype, \"parentNode\", {\n        // Read-write aliases for properties\n        /**\n         * Same as {@link parent}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.parent;\n        },\n        set: function (parent) {\n            this.parent = parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"previousSibling\", {\n        /**\n         * Same as {@link prev}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.prev;\n        },\n        set: function (prev) {\n            this.prev = prev;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"nextSibling\", {\n        /**\n         * Same as {@link next}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.next;\n        },\n        set: function (next) {\n            this.next = next;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    Node.prototype.cloneNode = function (recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return cloneNode(this, recursive);\n    };\n    return Node;\n}());\nexports.Node = Node;\n/**\n * A node that contains some data.\n */\nvar DataNode = /** @class */ (function (_super) {\n    __extends(DataNode, _super);\n    /**\n     * @param data The content of the data node\n     */\n    function DataNode(data) {\n        var _this = _super.call(this) || this;\n        _this.data = data;\n        return _this;\n    }\n    Object.defineProperty(DataNode.prototype, \"nodeValue\", {\n        /**\n         * Same as {@link data}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (data) {\n            this.data = data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return DataNode;\n}(Node));\nexports.DataNode = DataNode;\n/**\n * Text within the document.\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = domelementtype_1.ElementType.Text;\n        return _this;\n    }\n    Object.defineProperty(Text.prototype, \"nodeType\", {\n        get: function () {\n            return 3;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Text;\n}(DataNode));\nexports.Text = Text;\n/**\n * Comments within the document.\n */\nvar Comment = /** @class */ (function (_super) {\n    __extends(Comment, _super);\n    function Comment() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = domelementtype_1.ElementType.Comment;\n        return _this;\n    }\n    Object.defineProperty(Comment.prototype, \"nodeType\", {\n        get: function () {\n            return 8;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Comment;\n}(DataNode));\nexports.Comment = Comment;\n/**\n * Processing instructions, including doc types.\n */\nvar ProcessingInstruction = /** @class */ (function (_super) {\n    __extends(ProcessingInstruction, _super);\n    function ProcessingInstruction(name, data) {\n        var _this = _super.call(this, data) || this;\n        _this.name = name;\n        _this.type = domelementtype_1.ElementType.Directive;\n        return _this;\n    }\n    Object.defineProperty(ProcessingInstruction.prototype, \"nodeType\", {\n        get: function () {\n            return 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ProcessingInstruction;\n}(DataNode));\nexports.ProcessingInstruction = ProcessingInstruction;\n/**\n * A `Node` that can have children.\n */\nvar NodeWithChildren = /** @class */ (function (_super) {\n    __extends(NodeWithChildren, _super);\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    function NodeWithChildren(children) {\n        var _this = _super.call(this) || this;\n        _this.children = children;\n        return _this;\n    }\n    Object.defineProperty(NodeWithChildren.prototype, \"firstChild\", {\n        // Aliases\n        /** First child of the node. */\n        get: function () {\n            var _a;\n            return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeWithChildren.prototype, \"lastChild\", {\n        /** Last child of the node. */\n        get: function () {\n            return this.children.length > 0\n                ? this.children[this.children.length - 1]\n                : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeWithChildren.prototype, \"childNodes\", {\n        /**\n         * Same as {@link children}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.children;\n        },\n        set: function (children) {\n            this.children = children;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return NodeWithChildren;\n}(Node));\nexports.NodeWithChildren = NodeWithChildren;\nvar CDATA = /** @class */ (function (_super) {\n    __extends(CDATA, _super);\n    function CDATA() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = domelementtype_1.ElementType.CDATA;\n        return _this;\n    }\n    Object.defineProperty(CDATA.prototype, \"nodeType\", {\n        get: function () {\n            return 4;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CDATA;\n}(NodeWithChildren));\nexports.CDATA = CDATA;\n/**\n * The root node of the document.\n */\nvar Document = /** @class */ (function (_super) {\n    __extends(Document, _super);\n    function Document() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = domelementtype_1.ElementType.Root;\n        return _this;\n    }\n    Object.defineProperty(Document.prototype, \"nodeType\", {\n        get: function () {\n            return 9;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Document;\n}(NodeWithChildren));\nexports.Document = Document;\n/**\n * An element within the DOM.\n */\nvar Element = /** @class */ (function (_super) {\n    __extends(Element, _super);\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    function Element(name, attribs, children, type) {\n        if (children === void 0) { children = []; }\n        if (type === void 0) { type = name === \"script\"\n            ? domelementtype_1.ElementType.Script\n            : name === \"style\"\n                ? domelementtype_1.ElementType.Style\n                : domelementtype_1.ElementType.Tag; }\n        var _this = _super.call(this, children) || this;\n        _this.name = name;\n        _this.attribs = attribs;\n        _this.type = type;\n        return _this;\n    }\n    Object.defineProperty(Element.prototype, \"nodeType\", {\n        get: function () {\n            return 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"tagName\", {\n        // DOM Level 1 aliases\n        /**\n         * Same as {@link name}.\n         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n         */\n        get: function () {\n            return this.name;\n        },\n        set: function (name) {\n            this.name = name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"attributes\", {\n        get: function () {\n            var _this = this;\n            return Object.keys(this.attribs).map(function (name) {\n                var _a, _b;\n                return ({\n                    name: name,\n                    value: _this.attribs[name],\n                    namespace: (_a = _this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                    prefix: (_b = _this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n                });\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Element;\n}(NodeWithChildren));\nexports.Element = Element;\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nfunction isTag(node) {\n    return (0, domelementtype_1.isTag)(node);\n}\nexports.isTag = isTag;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nfunction isCDATA(node) {\n    return node.type === domelementtype_1.ElementType.CDATA;\n}\nexports.isCDATA = isCDATA;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nfunction isText(node) {\n    return node.type === domelementtype_1.ElementType.Text;\n}\nexports.isText = isText;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nfunction isComment(node) {\n    return node.type === domelementtype_1.ElementType.Comment;\n}\nexports.isComment = isComment;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDirective(node) {\n    return node.type === domelementtype_1.ElementType.Directive;\n}\nexports.isDirective = isDirective;\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDocument(node) {\n    return node.type === domelementtype_1.ElementType.Root;\n}\nexports.isDocument = isDocument;\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nfunction hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\nexports.hasChildren = hasChildren;\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nfunction cloneNode(node, recursive) {\n    if (recursive === void 0) { recursive = false; }\n    var result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        var children = recursive ? cloneChildren(node.children) : [];\n        var clone_1 = new Element(node.name, __assign({}, node.attribs), children);\n        children.forEach(function (child) { return (child.parent = clone_1); });\n        if (node.namespace != null) {\n            clone_1.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone_1[\"x-attribsNamespace\"] = __assign({}, node[\"x-attribsNamespace\"]);\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone_1[\"x-attribsPrefix\"] = __assign({}, node[\"x-attribsPrefix\"]);\n        }\n        result = clone_1;\n    }\n    else if (isCDATA(node)) {\n        var children = recursive ? cloneChildren(node.children) : [];\n        var clone_2 = new CDATA(children);\n        children.forEach(function (child) { return (child.parent = clone_2); });\n        result = clone_2;\n    }\n    else if (isDocument(node)) {\n        var children = recursive ? cloneChildren(node.children) : [];\n        var clone_3 = new Document(children);\n        children.forEach(function (child) { return (child.parent = clone_3); });\n        if (node[\"x-mode\"]) {\n            clone_3[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone_3;\n    }\n    else if (isDirective(node)) {\n        var instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(\"Not implemented yet: \".concat(node.type));\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nexports.cloneNode = cloneNode;\nfunction cloneChildren(childs) {\n    var children = childs.map(function (child) { return cloneNode(child, true); });\n    for (var i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","'use strict';\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\n\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nconst RESERVED = 0;\n\n// A simple string attribute.\n// Attributes that aren't in the filter are presumed to have this type.\nconst STRING = 1;\n\n// A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\nconst BOOLEANISH_STRING = 2;\n\n// A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\nconst BOOLEAN = 3;\n\n// An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\nconst OVERLOADED_BOOLEAN = 4;\n\n// An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\nconst NUMERIC = 5;\n\n// An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\nconst POSITIVE_NUMERIC = 6;\n\nfunction getPropertyInfo(name) {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(\n  name,\n  type,\n  mustUseProperty,\n  attributeName,\n  attributeNamespace,\n  sanitizeURL,\n  removeEmptyString,\n) {\n  this.acceptsBooleans =\n    type === BOOLEANISH_STRING ||\n    type === BOOLEAN ||\n    type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n  this.sanitizeURL = sanitizeURL;\n  this.removeEmptyString = removeEmptyString;\n}\n\n// When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\nconst properties = {};\n\n// These props are reserved by React. They shouldn't be written to the DOM.\nconst reservedProps = [\n  'children',\n  'dangerouslySetInnerHTML',\n  // TODO: This prevents the assignment of defaultValue to regular\n  // elements (not just inputs). Now that ReactDOMInput assigns to the\n  // defaultValue property -- do we need this?\n  'defaultValue',\n  'defaultChecked',\n  'innerHTML',\n  'suppressContentEditableWarning',\n  'suppressHydrationWarning',\n  'style',\n];\n\nreservedProps.forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    RESERVED,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n[\n  ['acceptCharset', 'accept-charset'],\n  ['className', 'class'],\n  ['htmlFor', 'for'],\n  ['httpEquiv', 'http-equiv'],\n].forEach(([name, attributeName]) => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEANISH_STRING,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n[\n  'autoReverse',\n  'externalResourcesRequired',\n  'focusable',\n  'preserveAlpha',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEANISH_STRING,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML boolean attributes.\n[\n  'allowFullScreen',\n  'async',\n  // Note: there is a special case that prevents it from being written to the DOM\n  // on the client side because the browsers are inconsistent. Instead we call focus().\n  'autoFocus',\n  'autoPlay',\n  'controls',\n  'default',\n  'defer',\n  'disabled',\n  'disablePictureInPicture',\n  'disableRemotePlayback',\n  'formNoValidate',\n  'hidden',\n  'loop',\n  'noModule',\n  'noValidate',\n  'open',\n  'playsInline',\n  'readOnly',\n  'required',\n  'reversed',\n  'scoped',\n  'seamless',\n  // Microdata\n  'itemScope',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEAN,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n[\n  'checked',\n  // Note: `option.selected` is not updated if `select.multiple` is\n  // disabled with `removeAttribute`. We have special logic for handling this.\n  'multiple',\n  'muted',\n  'selected',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEAN,\n    true, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n[\n  'capture',\n  'download',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    OVERLOADED_BOOLEAN,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML attributes that must be positive numbers.\n[\n  'cols',\n  'rows',\n  'size',\n  'span',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    POSITIVE_NUMERIC,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML attributes that must be numbers.\n['rowSpan', 'start'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    NUMERIC,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\nconst CAMELIZE = /[\\-\\:]([a-z])/g;\nconst capitalize = token => token[1].toUpperCase();\n\n// This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML attribute filter.\n// Some of these attributes can be hard to find. This list was created by\n// scraping the MDN documentation.\n[\n  'accent-height',\n  'alignment-baseline',\n  'arabic-form',\n  'baseline-shift',\n  'cap-height',\n  'clip-path',\n  'clip-rule',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'dominant-baseline',\n  'enable-background',\n  'fill-opacity',\n  'fill-rule',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'glyph-name',\n  'glyph-orientation-horizontal',\n  'glyph-orientation-vertical',\n  'horiz-adv-x',\n  'horiz-origin-x',\n  'image-rendering',\n  'letter-spacing',\n  'lighting-color',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'overline-position',\n  'overline-thickness',\n  'paint-order',\n  'panose-1',\n  'pointer-events',\n  'rendering-intent',\n  'shape-rendering',\n  'stop-color',\n  'stop-opacity',\n  'strikethrough-position',\n  'strikethrough-thickness',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'underline-position',\n  'underline-thickness',\n  'unicode-bidi',\n  'unicode-range',\n  'units-per-em',\n  'v-alphabetic',\n  'v-hanging',\n  'v-ideographic',\n  'v-mathematical',\n  'vector-effect',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'word-spacing',\n  'writing-mode',\n  'xmlns:xlink',\n  'x-height',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// String SVG attributes with the xlink namespace.\n[\n  'xlink:actuate',\n  'xlink:arcrole',\n  'xlink:role',\n  'xlink:show',\n  'xlink:title',\n  'xlink:type',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    'http://www.w3.org/1999/xlink',\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// String SVG attributes with the xml namespace.\n[\n  'xml:base',\n  'xml:lang',\n  'xml:space',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    'http://www.w3.org/XML/1998/namespace',\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n['tabIndex', 'crossOrigin'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(\n    attributeName,\n    STRING,\n    false, // mustUseProperty\n    attributeName.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These attributes accept URLs. These must not allow javascript: URLS.\n// These will also need to accept Trusted Types object in the future.\nconst xlinkHref = 'xlinkHref';\nproperties[xlinkHref] = new PropertyInfoRecord(\n  'xlinkHref',\n  STRING,\n  false, // mustUseProperty\n  'xlink:href',\n  'http://www.w3.org/1999/xlink',\n  true, // sanitizeURL\n  false, // removeEmptyString\n);\n\n['src', 'href', 'action', 'formAction'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(\n    attributeName,\n    STRING,\n    false, // mustUseProperty\n    attributeName.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    true, // sanitizeURL\n    true, // removeEmptyString\n  );\n});\n\n// \nconst {\n  CAMELCASE,\n  SAME,\n  possibleStandardNames: possibleStandardNamesOptimized\n} = require('../lib/possibleStandardNamesOptimized');\n\nconst ATTRIBUTE_NAME_START_CHAR =\n  ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n\nconst ATTRIBUTE_NAME_CHAR =\n  ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\n/**\n * Checks whether a property name is a custom attribute.\n *\n * @see https://github.com/facebook/react/blob/15-stable/src/renderers/dom/shared/HTMLDOMPropertyConfig.js#L23-L25\n *\n * @type {(attribute: string) => boolean}\n */\nconst isCustomAttribute =\n  RegExp.prototype.test.bind(\n    // eslint-disable-next-line no-misleading-character-class\n    new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$')\n  );\n\n/**\n * @type {Record<string, string>}\n */\nconst possibleStandardNames = Object.keys(\n  possibleStandardNamesOptimized\n).reduce((accumulator, standardName) => {\n  const propName = possibleStandardNamesOptimized[standardName];\n  if (propName === SAME) {\n    accumulator[standardName] = standardName;\n  } else if (propName === CAMELCASE) {\n    accumulator[standardName.toLowerCase()] = standardName;\n  } else {\n    accumulator[standardName] = propName;\n  }\n  return accumulator;\n}, {});\n\nexports.BOOLEAN = BOOLEAN;\nexports.BOOLEANISH_STRING = BOOLEANISH_STRING;\nexports.NUMERIC = NUMERIC;\nexports.OVERLOADED_BOOLEAN = OVERLOADED_BOOLEAN;\nexports.POSITIVE_NUMERIC = POSITIVE_NUMERIC;\nexports.RESERVED = RESERVED;\nexports.STRING = STRING;\nexports.getPropertyInfo = getPropertyInfo;\nexports.isCustomAttribute = isCustomAttribute;\nexports.possibleStandardNames = possibleStandardNames;\n","// An attribute in which the DOM/SVG standard name is the same as the React prop name (e.g., 'accept').\nvar SAME = 0;\nexports.SAME = SAME;\n\n// An attribute in which the React prop name is the camelcased version of the DOM/SVG standard name (e.g., 'acceptCharset').\nvar CAMELCASE = 1;\nexports.CAMELCASE = CAMELCASE;\n\nexports.possibleStandardNames = {\n  accept: 0,\n  acceptCharset: 1,\n  'accept-charset': 'acceptCharset',\n  accessKey: 1,\n  action: 0,\n  allowFullScreen: 1,\n  alt: 0,\n  as: 0,\n  async: 0,\n  autoCapitalize: 1,\n  autoComplete: 1,\n  autoCorrect: 1,\n  autoFocus: 1,\n  autoPlay: 1,\n  autoSave: 1,\n  capture: 0,\n  cellPadding: 1,\n  cellSpacing: 1,\n  challenge: 0,\n  charSet: 1,\n  checked: 0,\n  children: 0,\n  cite: 0,\n  class: 'className',\n  classID: 1,\n  className: 1,\n  cols: 0,\n  colSpan: 1,\n  content: 0,\n  contentEditable: 1,\n  contextMenu: 1,\n  controls: 0,\n  controlsList: 1,\n  coords: 0,\n  crossOrigin: 1,\n  dangerouslySetInnerHTML: 1,\n  data: 0,\n  dateTime: 1,\n  default: 0,\n  defaultChecked: 1,\n  defaultValue: 1,\n  defer: 0,\n  dir: 0,\n  disabled: 0,\n  disablePictureInPicture: 1,\n  disableRemotePlayback: 1,\n  download: 0,\n  draggable: 0,\n  encType: 1,\n  enterKeyHint: 1,\n  for: 'htmlFor',\n  form: 0,\n  formMethod: 1,\n  formAction: 1,\n  formEncType: 1,\n  formNoValidate: 1,\n  formTarget: 1,\n  frameBorder: 1,\n  headers: 0,\n  height: 0,\n  hidden: 0,\n  high: 0,\n  href: 0,\n  hrefLang: 1,\n  htmlFor: 1,\n  httpEquiv: 1,\n  'http-equiv': 'httpEquiv',\n  icon: 0,\n  id: 0,\n  innerHTML: 1,\n  inputMode: 1,\n  integrity: 0,\n  is: 0,\n  itemID: 1,\n  itemProp: 1,\n  itemRef: 1,\n  itemScope: 1,\n  itemType: 1,\n  keyParams: 1,\n  keyType: 1,\n  kind: 0,\n  label: 0,\n  lang: 0,\n  list: 0,\n  loop: 0,\n  low: 0,\n  manifest: 0,\n  marginWidth: 1,\n  marginHeight: 1,\n  max: 0,\n  maxLength: 1,\n  media: 0,\n  mediaGroup: 1,\n  method: 0,\n  min: 0,\n  minLength: 1,\n  multiple: 0,\n  muted: 0,\n  name: 0,\n  noModule: 1,\n  nonce: 0,\n  noValidate: 1,\n  open: 0,\n  optimum: 0,\n  pattern: 0,\n  placeholder: 0,\n  playsInline: 1,\n  poster: 0,\n  preload: 0,\n  profile: 0,\n  radioGroup: 1,\n  readOnly: 1,\n  referrerPolicy: 1,\n  rel: 0,\n  required: 0,\n  reversed: 0,\n  role: 0,\n  rows: 0,\n  rowSpan: 1,\n  sandbox: 0,\n  scope: 0,\n  scoped: 0,\n  scrolling: 0,\n  seamless: 0,\n  selected: 0,\n  shape: 0,\n  size: 0,\n  sizes: 0,\n  span: 0,\n  spellCheck: 1,\n  src: 0,\n  srcDoc: 1,\n  srcLang: 1,\n  srcSet: 1,\n  start: 0,\n  step: 0,\n  style: 0,\n  summary: 0,\n  tabIndex: 1,\n  target: 0,\n  title: 0,\n  type: 0,\n  useMap: 1,\n  value: 0,\n  width: 0,\n  wmode: 0,\n  wrap: 0,\n  about: 0,\n  accentHeight: 1,\n  'accent-height': 'accentHeight',\n  accumulate: 0,\n  additive: 0,\n  alignmentBaseline: 1,\n  'alignment-baseline': 'alignmentBaseline',\n  allowReorder: 1,\n  alphabetic: 0,\n  amplitude: 0,\n  arabicForm: 1,\n  'arabic-form': 'arabicForm',\n  ascent: 0,\n  attributeName: 1,\n  attributeType: 1,\n  autoReverse: 1,\n  azimuth: 0,\n  baseFrequency: 1,\n  baselineShift: 1,\n  'baseline-shift': 'baselineShift',\n  baseProfile: 1,\n  bbox: 0,\n  begin: 0,\n  bias: 0,\n  by: 0,\n  calcMode: 1,\n  capHeight: 1,\n  'cap-height': 'capHeight',\n  clip: 0,\n  clipPath: 1,\n  'clip-path': 'clipPath',\n  clipPathUnits: 1,\n  clipRule: 1,\n  'clip-rule': 'clipRule',\n  color: 0,\n  colorInterpolation: 1,\n  'color-interpolation': 'colorInterpolation',\n  colorInterpolationFilters: 1,\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorProfile: 1,\n  'color-profile': 'colorProfile',\n  colorRendering: 1,\n  'color-rendering': 'colorRendering',\n  contentScriptType: 1,\n  contentStyleType: 1,\n  cursor: 0,\n  cx: 0,\n  cy: 0,\n  d: 0,\n  datatype: 0,\n  decelerate: 0,\n  descent: 0,\n  diffuseConstant: 1,\n  direction: 0,\n  display: 0,\n  divisor: 0,\n  dominantBaseline: 1,\n  'dominant-baseline': 'dominantBaseline',\n  dur: 0,\n  dx: 0,\n  dy: 0,\n  edgeMode: 1,\n  elevation: 0,\n  enableBackground: 1,\n  'enable-background': 'enableBackground',\n  end: 0,\n  exponent: 0,\n  externalResourcesRequired: 1,\n  fill: 0,\n  fillOpacity: 1,\n  'fill-opacity': 'fillOpacity',\n  fillRule: 1,\n  'fill-rule': 'fillRule',\n  filter: 0,\n  filterRes: 1,\n  filterUnits: 1,\n  floodOpacity: 1,\n  'flood-opacity': 'floodOpacity',\n  floodColor: 1,\n  'flood-color': 'floodColor',\n  focusable: 0,\n  fontFamily: 1,\n  'font-family': 'fontFamily',\n  fontSize: 1,\n  'font-size': 'fontSize',\n  fontSizeAdjust: 1,\n  'font-size-adjust': 'fontSizeAdjust',\n  fontStretch: 1,\n  'font-stretch': 'fontStretch',\n  fontStyle: 1,\n  'font-style': 'fontStyle',\n  fontVariant: 1,\n  'font-variant': 'fontVariant',\n  fontWeight: 1,\n  'font-weight': 'fontWeight',\n  format: 0,\n  from: 0,\n  fx: 0,\n  fy: 0,\n  g1: 0,\n  g2: 0,\n  glyphName: 1,\n  'glyph-name': 'glyphName',\n  glyphOrientationHorizontal: 1,\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphOrientationVertical: 1,\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphRef: 1,\n  gradientTransform: 1,\n  gradientUnits: 1,\n  hanging: 0,\n  horizAdvX: 1,\n  'horiz-adv-x': 'horizAdvX',\n  horizOriginX: 1,\n  'horiz-origin-x': 'horizOriginX',\n  ideographic: 0,\n  imageRendering: 1,\n  'image-rendering': 'imageRendering',\n  in2: 0,\n  in: 0,\n  inlist: 0,\n  intercept: 0,\n  k1: 0,\n  k2: 0,\n  k3: 0,\n  k4: 0,\n  k: 0,\n  kernelMatrix: 1,\n  kernelUnitLength: 1,\n  kerning: 0,\n  keyPoints: 1,\n  keySplines: 1,\n  keyTimes: 1,\n  lengthAdjust: 1,\n  letterSpacing: 1,\n  'letter-spacing': 'letterSpacing',\n  lightingColor: 1,\n  'lighting-color': 'lightingColor',\n  limitingConeAngle: 1,\n  local: 0,\n  markerEnd: 1,\n  'marker-end': 'markerEnd',\n  markerHeight: 1,\n  markerMid: 1,\n  'marker-mid': 'markerMid',\n  markerStart: 1,\n  'marker-start': 'markerStart',\n  markerUnits: 1,\n  markerWidth: 1,\n  mask: 0,\n  maskContentUnits: 1,\n  maskUnits: 1,\n  mathematical: 0,\n  mode: 0,\n  numOctaves: 1,\n  offset: 0,\n  opacity: 0,\n  operator: 0,\n  order: 0,\n  orient: 0,\n  orientation: 0,\n  origin: 0,\n  overflow: 0,\n  overlinePosition: 1,\n  'overline-position': 'overlinePosition',\n  overlineThickness: 1,\n  'overline-thickness': 'overlineThickness',\n  paintOrder: 1,\n  'paint-order': 'paintOrder',\n  panose1: 0,\n  'panose-1': 'panose1',\n  pathLength: 1,\n  patternContentUnits: 1,\n  patternTransform: 1,\n  patternUnits: 1,\n  pointerEvents: 1,\n  'pointer-events': 'pointerEvents',\n  points: 0,\n  pointsAtX: 1,\n  pointsAtY: 1,\n  pointsAtZ: 1,\n  prefix: 0,\n  preserveAlpha: 1,\n  preserveAspectRatio: 1,\n  primitiveUnits: 1,\n  property: 0,\n  r: 0,\n  radius: 0,\n  refX: 1,\n  refY: 1,\n  renderingIntent: 1,\n  'rendering-intent': 'renderingIntent',\n  repeatCount: 1,\n  repeatDur: 1,\n  requiredExtensions: 1,\n  requiredFeatures: 1,\n  resource: 0,\n  restart: 0,\n  result: 0,\n  results: 0,\n  rotate: 0,\n  rx: 0,\n  ry: 0,\n  scale: 0,\n  security: 0,\n  seed: 0,\n  shapeRendering: 1,\n  'shape-rendering': 'shapeRendering',\n  slope: 0,\n  spacing: 0,\n  specularConstant: 1,\n  specularExponent: 1,\n  speed: 0,\n  spreadMethod: 1,\n  startOffset: 1,\n  stdDeviation: 1,\n  stemh: 0,\n  stemv: 0,\n  stitchTiles: 1,\n  stopColor: 1,\n  'stop-color': 'stopColor',\n  stopOpacity: 1,\n  'stop-opacity': 'stopOpacity',\n  strikethroughPosition: 1,\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughThickness: 1,\n  'strikethrough-thickness': 'strikethroughThickness',\n  string: 0,\n  stroke: 0,\n  strokeDasharray: 1,\n  'stroke-dasharray': 'strokeDasharray',\n  strokeDashoffset: 1,\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokeLinecap: 1,\n  'stroke-linecap': 'strokeLinecap',\n  strokeLinejoin: 1,\n  'stroke-linejoin': 'strokeLinejoin',\n  strokeMiterlimit: 1,\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokeWidth: 1,\n  'stroke-width': 'strokeWidth',\n  strokeOpacity: 1,\n  'stroke-opacity': 'strokeOpacity',\n  suppressContentEditableWarning: 1,\n  suppressHydrationWarning: 1,\n  surfaceScale: 1,\n  systemLanguage: 1,\n  tableValues: 1,\n  targetX: 1,\n  targetY: 1,\n  textAnchor: 1,\n  'text-anchor': 'textAnchor',\n  textDecoration: 1,\n  'text-decoration': 'textDecoration',\n  textLength: 1,\n  textRendering: 1,\n  'text-rendering': 'textRendering',\n  to: 0,\n  transform: 0,\n  typeof: 0,\n  u1: 0,\n  u2: 0,\n  underlinePosition: 1,\n  'underline-position': 'underlinePosition',\n  underlineThickness: 1,\n  'underline-thickness': 'underlineThickness',\n  unicode: 0,\n  unicodeBidi: 1,\n  'unicode-bidi': 'unicodeBidi',\n  unicodeRange: 1,\n  'unicode-range': 'unicodeRange',\n  unitsPerEm: 1,\n  'units-per-em': 'unitsPerEm',\n  unselectable: 0,\n  vAlphabetic: 1,\n  'v-alphabetic': 'vAlphabetic',\n  values: 0,\n  vectorEffect: 1,\n  'vector-effect': 'vectorEffect',\n  version: 0,\n  vertAdvY: 1,\n  'vert-adv-y': 'vertAdvY',\n  vertOriginX: 1,\n  'vert-origin-x': 'vertOriginX',\n  vertOriginY: 1,\n  'vert-origin-y': 'vertOriginY',\n  vHanging: 1,\n  'v-hanging': 'vHanging',\n  vIdeographic: 1,\n  'v-ideographic': 'vIdeographic',\n  viewBox: 1,\n  viewTarget: 1,\n  visibility: 0,\n  vMathematical: 1,\n  'v-mathematical': 'vMathematical',\n  vocab: 0,\n  widths: 0,\n  wordSpacing: 1,\n  'word-spacing': 'wordSpacing',\n  writingMode: 1,\n  'writing-mode': 'writingMode',\n  x1: 0,\n  x2: 0,\n  x: 0,\n  xChannelSelector: 1,\n  xHeight: 1,\n  'x-height': 'xHeight',\n  xlinkActuate: 1,\n  'xlink:actuate': 'xlinkActuate',\n  xlinkArcrole: 1,\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkHref: 1,\n  'xlink:href': 'xlinkHref',\n  xlinkRole: 1,\n  'xlink:role': 'xlinkRole',\n  xlinkShow: 1,\n  'xlink:show': 'xlinkShow',\n  xlinkTitle: 1,\n  'xlink:title': 'xlinkTitle',\n  xlinkType: 1,\n  'xlink:type': 'xlinkType',\n  xmlBase: 1,\n  'xml:base': 'xmlBase',\n  xmlLang: 1,\n  'xml:lang': 'xmlLang',\n  xmlns: 0,\n  'xml:space': 'xmlSpace',\n  xmlnsXlink: 1,\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlSpace: 1,\n  y1: 0,\n  y2: 0,\n  y: 0,\n  yChannelSelector: 1,\n  z: 0,\n  zoomAndPan: 1\n};\n","import StyleToObject from 'style-to-object';\nimport { camelCase, CamelCaseOptions } from './utilities';\n\ntype StyleObject = Record<string, string>;\n\ninterface StyleToJSOptions extends CamelCaseOptions {}\n\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nexport default function StyleToJS(\n  style: string,\n  options?: StyleToJSOptions,\n): StyleObject {\n  const output: StyleObject = {};\n\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  StyleToObject(style, (property, value) => {\n    // skip CSS comment\n    if (property && value) {\n      output[camelCase(property, options)] = value;\n    }\n  });\n\n  return output;\n}\n","const CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;\nconst HYPHEN_REGEX = /-([a-z])/g;\nconst NO_HYPHEN_REGEX = /^[^-]+$/;\nconst VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nconst MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n\n/**\n * Checks whether to skip camelCase.\n */\nconst skipCamelCase = (property: string) =>\n  !property ||\n  NO_HYPHEN_REGEX.test(property) ||\n  CUSTOM_PROPERTY_REGEX.test(property);\n\n/**\n * Replacer that capitalizes first character.\n */\nconst capitalize = (match: string, character: string) =>\n  character.toUpperCase();\n\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nconst trimHyphen = (match: string, prefix: string) => `${prefix}-`;\n\n/**\n * CamelCase options.\n */\nexport interface CamelCaseOptions {\n  reactCompat?: boolean;\n}\n\n/**\n * CamelCases a CSS property.\n */\nexport const camelCase = (property: string, options: CamelCaseOptions = {}) => {\n  if (skipCamelCase(property)) {\n    return property;\n  }\n\n  property = property.toLowerCase();\n\n  if (options.reactCompat) {\n    // `-ms` vendor prefix should not be capitalized\n    property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n  } else {\n    // for non-React, remove first hyphen so vendor prefix is not capitalized\n    property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n  }\n\n  return property.replace(HYPHEN_REGEX, capitalize);\n};\n","import parse from 'inline-style-parser';\nimport type { Declaration } from 'inline-style-parser';\n\nexport { Declaration };\n\ninterface StyleObject {\n  [name: string]: string;\n}\n\ntype Iterator = (\n  property: string,\n  value: string,\n  declaration: Declaration,\n) => void;\n\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nexport default function StyleToObject(\n  style: string,\n  iterator?: Iterator,\n): StyleObject | null {\n  let styleObject: StyleObject | null = null;\n\n  if (!style || typeof style !== 'string') {\n    return styleObject;\n  }\n\n  const declarations = parse(style);\n  const hasIterator = typeof iterator === 'function';\n\n  declarations.forEach((declaration) => {\n    if (declaration.type !== 'declaration') {\n      return;\n    }\n\n    const { property, value } = declaration;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      styleObject = styleObject || {};\n      styleObject[property] = value;\n    }\n  });\n\n  return styleObject;\n}\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import HTMLReactParser from '../lib/index.js';\n\nexport {\n  Comment,\n  Element,\n  ProcessingInstruction,\n  Text,\n  attributesToProps,\n  domToReact,\n  htmlToDOM,\n} from '../lib/index.js';\n\nexport default HTMLReactParser.default || HTMLReactParser;\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} ToHastOptions\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(options || destination)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","TypeError","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayLikeToArray","o","minLen","n","Object","prototype","toString","slice","constructor","name","from","test","ElementType","defineProperty","Doctype","CDATA","Tag","Style","Script","Comment","Directive","Text","Root","isTag","elem","type","hasOwn","hasOwnProperty","toStr","gOPD","getOwnPropertyDescriptor","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","options","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","deep","reduce","accumulator","tagName","toLowerCase","HTML","HEAD","BODY","FIRST_TAG_REGEX","HEAD_TAG_REGEX","BODY_TAG_REGEX","parseFromDocument","html","Error","parseFromString","DOMParser","window","domParser_1","document","implementation","htmlDocument_1","createHTMLDocument","element","documentElement","querySelector","innerHTML","parseFromTemplate","template","createElement","content","childNodes","match","firstTagName","doc","parentNode","removeChild","querySelectorAll","elements","DIRECTIVE_REGEX","directive","undefined","formatDOM","formatAttributes","attributes","map","index","attributesLength","attribute","formatTagName","caseSensitiveTagName","constants_1","getCaseSensitiveTagName","nodes","parent","current","domNodes","nodesLength","node","nodeType","nodeName","domhandler_1","children","nodeValue","prev","substring","indexOf","unshift","__createBinding","this","create","m","k","k2","desc","get","__exportStar","p","DomHandler","domelementtype_1","require","node_js_1","defaultOpts","withStartIndices","withEndIndices","xmlMode","callback","elementCB","dom","root","Document","tagStack","lastNode","parser","onparserinit","onreset","onend","handleCallback","onerror","error","onclosetag","pop","endIndex","onopentag","attribs","Element","addNode","ontext","data","oncomment","oncommentend","oncdatastart","text","oncdataend","onprocessinginstruction","ProcessingInstruction","previousSibling","startIndex","__extends","extendStatics","d","b","setPrototypeOf","__proto__","String","__","__assign","assign","t","s","apply","cloneNode","hasChildren","isDocument","isDirective","isComment","isText","isCDATA","NodeWithChildren","DataNode","Node","set","recursive","_super","_this","_a","keys","_b","namespace","prefix","result","cloneChildren","clone_1","forEach","child","clone_2","clone_3","concat","instruction","sourceCodeLocation","childs","UNCONTROLLED_COMPONENT_ATTRIBUTES","UNCONTROLLED_COMPONENT_NAMES","valueOnlyInputs","reset","submit","getPropName","attributeName","react_property_1","props","isInputValueOnly","Boolean","attributeValue","isCustomAttribute","attributeNameLowerCased","propName","propertyInfo","getPropertyInfo","includes","utilities_1","setStyleProp","style","React","cloneElement","isValidElement","skipAttributesToProps","isCustomComponent","domToReact","reactElements","hasReplace","replace","transform","library","replaceElement","dangerouslySetInnerHTML","__html","defaultValue","isWhitespace","trim","canTextBeChildOfNode","html_dom_parser_1","attributes_to_props_1","dom_to_react_1","domParserOptions","lowerCaseAttributeNames","htmlparser2","RESERVED_SVG_MATHML_ELEMENTS","Set","has","is","styleOptions","reactCompat","Number","react_1","split","arg","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","lineno","column","updatePosition","lines","lastIndexOf","position","start","line","Position","whitespace","end","source","errorsList","msg","reason","filename","silent","re","exec","comments","rules","c","comment","pos","charAt","declaration","prop","val","ret","property","decl","decls","declarations","_slicedToArray","PropertyInfoRecord","mustUseProperty","attributeNamespace","sanitizeURL","removeEmptyString","acceptsBooleans","propertyName","properties","_ref","_ref2","CAMELIZE","capitalize","token","toUpperCase","_require","CAMELCASE","SAME","possibleStandardNamesOptimized","possibleStandardNames","RegExp","bind","standardName","BOOLEAN","BOOLEANISH_STRING","NUMERIC","OVERLOADED_BOOLEAN","POSITIVE_NUMERIC","RESERVED","STRING","accept","acceptCharset","accessKey","action","allowFullScreen","alt","as","async","autoCapitalize","autoComplete","autoCorrect","autoFocus","autoPlay","autoSave","capture","cellPadding","cellSpacing","challenge","charSet","checked","cite","class","classID","className","cols","colSpan","contentEditable","contextMenu","controls","controlsList","coords","crossOrigin","dateTime","default","defaultChecked","defer","dir","disabled","disablePictureInPicture","disableRemotePlayback","download","draggable","encType","enterKeyHint","for","form","formMethod","formAction","formEncType","formNoValidate","formTarget","frameBorder","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","icon","id","inputMode","integrity","itemID","itemProp","itemRef","itemScope","itemType","keyParams","keyType","kind","label","lang","list","loop","low","manifest","marginWidth","marginHeight","max","maxLength","media","mediaGroup","method","min","minLength","multiple","muted","noModule","nonce","noValidate","open","optimum","pattern","placeholder","playsInline","poster","preload","profile","radioGroup","readOnly","referrerPolicy","rel","required","reversed","role","rows","rowSpan","sandbox","scope","scoped","scrolling","seamless","selected","shape","size","sizes","span","spellCheck","srcDoc","srcLang","srcSet","step","summary","tabIndex","title","useMap","width","wmode","wrap","about","accentHeight","accumulate","additive","alignmentBaseline","allowReorder","alphabetic","amplitude","arabicForm","ascent","attributeType","autoReverse","azimuth","baseFrequency","baselineShift","baseProfile","bbox","begin","bias","by","calcMode","capHeight","clip","clipPath","clipPathUnits","clipRule","color","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","contentScriptType","contentStyleType","cursor","cx","cy","datatype","decelerate","descent","diffuseConstant","direction","display","divisor","dominantBaseline","dur","dx","dy","edgeMode","elevation","enableBackground","exponent","externalResourcesRequired","fill","fillOpacity","fillRule","filter","filterRes","filterUnits","floodOpacity","floodColor","focusable","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","format","fx","fy","g1","g2","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","glyphRef","gradientTransform","gradientUnits","hanging","horizAdvX","horizOriginX","ideographic","imageRendering","in2","in","inlist","intercept","k1","k3","k4","kernelMatrix","kernelUnitLength","kerning","keyPoints","keySplines","keyTimes","lengthAdjust","letterSpacing","lightingColor","limitingConeAngle","local","markerEnd","markerHeight","markerMid","markerStart","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mode","numOctaves","offset","opacity","operator","order","orient","orientation","origin","overflow","overlinePosition","overlineThickness","paintOrder","panose1","pathLength","patternContentUnits","patternTransform","patternUnits","pointerEvents","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","r","radius","refX","refY","renderingIntent","repeatCount","repeatDur","requiredExtensions","requiredFeatures","resource","restart","results","rotate","rx","ry","scale","security","seed","shapeRendering","slope","spacing","specularConstant","specularExponent","speed","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","string","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeWidth","strokeOpacity","suppressContentEditableWarning","suppressHydrationWarning","surfaceScale","systemLanguage","tableValues","targetX","targetY","textAnchor","textDecoration","textLength","textRendering","to","typeof","u1","u2","underlinePosition","underlineThickness","unicode","unicodeBidi","unicodeRange","unitsPerEm","unselectable","vAlphabetic","values","vectorEffect","version","vertAdvY","vertOriginX","vertOriginY","vHanging","vIdeographic","viewBox","viewTarget","visibility","vMathematical","vocab","widths","wordSpacing","writingMode","x1","x2","x","xChannelSelector","xHeight","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlLang","xmlns","xmlnsXlink","xmlSpace","y1","y2","y","yChannelSelector","z","zoomAndPan","output","camelCase","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","MS_VENDOR_PREFIX_REGEX","character","trimHyphen","skipCamelCase","styleObject","hasIterator","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","defaultWidth","formats","formatLong","date","full","long","medium","short","time","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","matchPattern","matchPatterns","defaultMatchWidth","matchResult","matchedString","parsePatterns","defaultParseWidth","findIndex","findKey","valueCallback","rest","object","predicate","array","parsePattern","parseInt","parseResult","any","enUS","code","formatDistance","count","tokenValue","addSuffix","comparison","formatRelative","_date","_baseDate","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","toDate","argument","argStr","Date","NaN","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","differenceInCalendarDays","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","constructFrom","startOfYear","cleanDate","setFullYear","getDayOfYear","startOfWeek","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","startOfISOWeekYear","fourthOfJanuary","getISOWeek","getWeekYear","_options$firstWeekCon","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","abs","padStart","lightFormatters","signedYear","numberOfDigits","milliseconds","trunc","dayPeriodEnum","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","M","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","isoDayOfWeek","a","dayPeriodEnumValue","hours","B","h","H","K","S","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","O","formatTimezoneShort","T","delimiter","sign","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","P","dateTimeFormat","datePattern","timePattern","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isDate","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","_ref4","_options$locale2","_options$locale2$opti","_ref5","_ref6","_ref7","_options$locale3","_options$locale3$opti","_defaultOptions$local3","_defaultOptions$local4","defaultLocale","originalDate","RangeError","parts","firstCharacter","longFormatter","join","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","message","console","warn","warnOrThrowProtectedError","formatter","matched","HTMLReactParser","nameRe","nameReJsx","emptyOptions","jsx","empty","Schema","_createClass","normal","space","_classCallCheck","merge","definitions","normalize","Info","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","defined","powers","increment","checks","types","DefinedInfo","_Info","_inherits","_createSuper","mark","_assertThisInitialized","check","own","definition","info","xlink","_","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","caseSensitiveTransform","caseInsensitiveTransform","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","allow","allowPaymentRequest","allowUserMedia","blocking","decoding","dirName","fetchPriority","imageSizes","imageSrcSet","inert","isMap","itemId","language","loading","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","ping","popover","popoverTarget","popoverTargetAction","shadowRootDelegatesFocus","shadowRootMode","slot","translate","typeMustMatch","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","char","charOff","classId","clear","codeBase","codeType","compact","declare","event","face","frame","hSpace","leftMargin","link","longDesc","lowSrc","noResize","noHref","noShade","noWrap","prompt","rev","rightMargin","scheme","standby","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","svg","dataType","horizOriginY","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","transformOrigin","typeOf","playbackOrder","timelineBegin","bandwidth","defaultAction","editable","focusHighlight","fr","handler","hatchContentUnits","hatchUnits","initialVisibility","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","observer","overlay","path","phase","pitch","propagate","requiredFonts","requiredFormats","side","snapshotTime","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","transformBehavior","htmlBase","svgBase","valid","dash","cap","kebab","$0","camelcase","hastToReact","StyleToObject","pointEnd","point","pointStart","stringifyPosition","VFileMessage","_Error","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","_objectSpread","cause","ruleId","fatal","file","stack","actual","expected","note","url","_wrapNativeSuper","emptyMap","Map","dashSomething","tableElements","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","isStaticChildren","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","state","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","schema","stylePropertyNameCase","tableCellAlignToStyle","parentSchema","findComponentFromName","alignValue","createProperty","_result","createElementProps","createChildren","thing","addChildren","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","_step","_iterator","_createForOfIteratorHelper","objectExpression","f","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","countsByName","Type","dashes","find","settings","_toConsumableArray","padRight","padLeft","commas","styleToObject","replacer","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","isIdentifierName","computed","optional","toDash","$1","urlAttributes","includeImageAlt","includeHtml","all","splice","remove","items","parameters","chunkStart","subtokenize","events","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","stream","previous","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","extension","hook","left","right","constructs","existing","before","add","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","limit","POSITIVE_INFINITY","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","eof","seen","entry","nok","disable","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","resolve","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","charCodeAt","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","view","startBufferIndex","endBufferIndex","head","shift","sliceChunks","_point","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","decodeNamedCharacterReference","characterReference","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","_document","_defineProperty","_flowInitial","_flow","_string","_text","resolveText","parse","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","base","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","lastIndex","preprocess","combined","_combined$key","_combined$key2","remarkParse","env","globalThis","deserialize","serialized","$","out","unpair","_$index","_step2","_iterator2","_step2$value","flags","_step3","_iterator3","_step3$value","_step4","_iterator4","BigInt","deserializer","EMPTY","asString","shouldSkip","TYPE","serializer","strict","json","pair","_typeOf","_typeOf2","valueOf","toJSON","entries","toISOString","serialize","lossy","structuredClone","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","_objectWithoutProperties","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","convert","castFactory","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","tests","_len","_key","testFunction","looksLikeANode","visitParents","visitor","reverse","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","suffix","contents","listItemLoose","trimLines","last","trimLine","handlers","blockquote","patch","applyData","break","delete","footnoteReference","counter","clobberPrefix","safeId","footnoteOrder","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","trimMarkdownSpaceStart","toHast","footnoteById","defaultHandlers","handle","passThrough","shallow","_excluded","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","_tail$children","tailTail","dataFootnotes","footer","remarkRehype","destination","_asyncToGenerator","_regeneratorRuntime","_callee","hastTree","_context","run","stop","_x","_x2","bail","getPrototypeOf","toStringTag","middleware","_len3","_key3","fnExpectsCallback","exception","then","_len4","_key4","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","CallableInstance","proto","func","names","getOwnPropertyNames","descriptor","Processor","_CallableInstance","Compiler","Parser","attachers","freezeIndex","frozen","transformers","fns","pipeline","middlewareIndex","_len2","_key2","middelware","trough","attacher","assertUnfrozen","_this$attachers$this$","_toArray","transformer","freeze","realFile","vfile","assertParser","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","complete","process","assertDone","assertNode","outputTree","resultingTree","addPlugin","addList","addPreset","_value","plugins","plugin","entryIndex","_parameters2","primary","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","runSync","_parent$children","colon","questionMark","numberSign"],"sourceRoot":""}