{"version":3,"file":"static/js/83.9d36399d.chunk.js","mappings":"kPAEMA,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAQ,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPC,EAAAA,EAAAA,IAAU,UAADC,OACpBP,EAAQ,2BAClBQ,EAAAA,GACA,KAAD,EAHW,OAGXP,EAAAE,EAAAM,KAHOP,EAAID,EAAJC,KAAIC,EAAAO,OAAA,SAKLR,EAAKS,MAAI,wBAAAR,EAAAS,OAAA,GAAAb,EAAA,KACjB,gBAPcc,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,K,mBC4Cf,EAvCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAAmCC,EAAAA,EAAAA,GAAS,CAC1CC,SAAU,CAAC,OAAQJ,GACnBK,QAAS,kBAAM1B,EAAUqB,EAAQ,IAF3Bd,EAAIgB,EAAJhB,KAAMoB,EAASJ,EAATI,UAAWC,EAAKL,EAALK,MAKzB,OAAID,GACKE,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAGZF,GACKG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,wBAAsBJ,EAAMK,YAIxCJ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,oEAAmEF,SAC/EzB,EAAK4B,KAAI,SAAAC,GAAK,OACbP,EAAAA,EAAAA,KAAA,MAAAG,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEH,EAAAA,EAAAA,KAAA,OACEQ,IACED,EAAME,aAAY,kCAAA1B,OACoBwB,EAAME,cAAY,qCAAA1B,OACfwB,EAAMG,MAEjDC,IAAKJ,EAAMG,KACXL,UAAU,qBAEZL,EAAAA,EAAAA,KAAA,KAAGK,UAAU,YAAWF,SAAEI,EAAMG,QAChCV,EAAAA,EAAAA,KAAA,KAAGK,UAAU,wBAAuBF,SAAEI,EAAMK,gBAZvCL,EAAMM,GAcV,KAIb,C,wFCxCaZ,EAAS,WACpB,OACEC,EAAAA,EAAAA,MAACY,EAAAA,EAAM,CAACT,UAAU,OAAOU,UAAQ,EAAAZ,SAAA,EAC/BH,EAAAA,EAAAA,KAACgB,EAAAA,IAAU,CAACX,UAAU,8BAA8B,gBAI1D,C,8FCTAvB,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAME,EAAc,CAClBiC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N","sources":["services/fetchCast.js","components/Cast.jsx","components/Loader.jsx","services/api.js"],"sourcesContent":["import { axios, baseOptions } from './api';\n\nconst fetchCast = async movie_id => {\n  const { data } = await axios.get(\n    `/movie/${movie_id}/credits?language=en-US`,\n    baseOptions\n  );\n\n  return data.cast;\n};\n\nexport { fetchCast };\n","import { useParams } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { fetchCast } from 'services/fetchCast';\n\nimport { Loader } from './Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const { data, isLoading, error } = useQuery({\n    queryKey: ['cast', movieId],\n    queryFn: () => fetchCast(movieId),\n  });\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <div>Error fetching data: {error.message}</div>;\n  }\n\n  return (\n    <div className=\"grid grid-cols-4 sm:grid-cols-6 lg:grid-cols-8 gap-4 py-4 text-xs\">\n      {data.map(actor => (\n        <ul key={actor.id}>\n          <li>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w185${actor.profile_path}`\n                  : `https://placehold.co/185x278?text=${actor.name}`\n              }\n              alt={actor.name}\n              className=\"rounded-lg mb-2\"\n            />\n            <p className=\"font-bold\">{actor.name}</p>\n            <p className=\"text-muted-foreground\">{actor.character}</p>\n          </li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import { ReloadIcon } from '@radix-ui/react-icons';\n\nimport { Button } from '@/components/ui/button';\n\nexport const Loader = () => {\n  return (\n    <Button className=\"my-4\" disabled>\n      <ReloadIcon className=\"mr-2 h-4 w-4 animate-spin\" />\n      Please wait\n    </Button>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie_id","_yield$axios$get","data","_context","prev","next","axios","concat","baseOptions","sent","abrupt","cast","stop","_x","apply","arguments","movieId","useParams","_useQuery","useQuery","queryKey","queryFn","isLoading","error","_jsx","Loader","_jsxs","children","message","className","map","actor","src","profile_path","name","alt","character","id","Button","disabled","ReloadIcon","headers","accept","Authorization"],"sourceRoot":""}