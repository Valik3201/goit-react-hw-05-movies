{"version":3,"file":"static/js/53.4c78e644.chunk.js","mappings":"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","sources":["@/components/ui/badge.jsx","@/components/ui/alert.jsx","components/Alert.jsx","components/MovieItem.jsx","services/fetchTrendingData.js","pages/Home.jsx","services/api.js"],"sourcesContent":["import * as React from \"react\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  ...props\n}) {\n  return (<div className={cn(badgeVariants({ variant }), className)} {...props} />);\n}\n\nexport { Badge, badgeVariants }\n","import * as React from 'react';\nimport { cva } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst alertVariants = cva(\n  'relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7',\n  {\n    variants: {\n      variant: {\n        default: 'bg-background text-foreground',\n        destructive:\n          'border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nconst Alert = React.forwardRef(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n));\nAlert.displayName = 'Alert';\n\nconst AlertTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('mb-1 font-medium leading-none tracking-tight', className)}\n    {...props}\n  />\n));\nAlertTitle.displayName = 'AlertTitle';\n\nconst AlertDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('text-sm [&_p]:leading-relaxed', className)}\n    {...props}\n  />\n));\nAlertDescription.displayName = 'AlertDescription';\n\nexport { Alert, AlertTitle, AlertDescription };\n","import {\n  ExclamationTriangleIcon,\n  InfoCircledIcon,\n} from '@radix-ui/react-icons';\n\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\n\n/**\n * Alert component for displaying destructive alerts.\n * @param {string} message - The message to display in the alert.\n * @returns {JSX.Element} JSX element representing the AlertDestructive component.\n */\nexport const AlertDestructive = ({ message }) => {\n  return (\n    <Alert variant=\"destructive\" className=\"max-w-2xl\">\n      <ExclamationTriangleIcon className=\"h-4 w-4\" />\n      <AlertTitle>Error</AlertTitle>\n      <AlertDescription>{message}</AlertDescription>\n    </Alert>\n  );\n};\n\n/**\n * Alert component for displaying informational alerts.\n * @returns {JSX.Element} JSX element representing the AlertInfo component.\n */\nexport const AlertInfo = () => {\n  return (\n    <Alert className=\"max-w-2xl\">\n      <InfoCircledIcon className=\"h-4 w-4 text-blue-500\" />\n      <AlertTitle>No Search Results</AlertTitle>\n      <AlertDescription>\n        Your search did not match any movies. Please try again with different\n        keywords or filters.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\n/**\n * Alert component for indicating no cast information available.\n * @returns {JSX.Element} JSX element representing the AlertNoCast component.\n */\nexport const AlertNoCast = () => {\n  return (\n    <Alert className=\"max-w-2xl mt-8\">\n      <InfoCircledIcon className=\"h-4 w-4 text-blue-500\" />\n      <AlertTitle>No Cast Information</AlertTitle>\n      <AlertDescription>\n        There is no information available about the cast for this movie.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\n/**\n * Alert component for indicating no reviews available.\n * @returns {JSX.Element} JSX element representing the AlertNoReviews component.\n */\nexport const AlertNoReviews = () => {\n  return (\n    <Alert className=\"max-w-2xl mt-8\">\n      <InfoCircledIcon className=\"h-4 w-4 text-blue-500\" />\n      <AlertTitle>No Reviews Yet</AlertTitle>\n      <AlertDescription>\n        There are currently no reviews available for this movie.\n      </AlertDescription>\n    </Alert>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nimport { Badge } from '@/components/ui/badge';\n\n/**\n * Component for displaying a movie item.\n * @param {Object} movie - The movie object containing information about the movie.\n * @returns {JSX.Element} JSX element representing the MovieItem component.\n */\nconst MovieItem = ({ movie }) => {\n  return (\n    <Link to={`/movies/${movie.id}`} key={movie.id}>\n      <div className=\"flex flex-col gap-2\">\n        <div className=\"overflow-hidden rounded-lg\">\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                : `https://placehold.co/342x513?text=${\n                    movie.title || movie.name\n                  }`\n            }\n            alt={movie.title || movie.name}\n            className=\"h-auto w-auto object-cover transition-all hover:scale-105\"\n          />\n        </div>\n        {movie.media_type && (\n          <div className=\"flex-none\">\n            <Badge>\n              {movie.media_type.charAt(0).toUpperCase() +\n                movie.media_type.slice(1)}\n            </Badge>\n          </div>\n        )}\n\n        <div className=\"flex flex-col gap-x-0.5\">\n          <h3 className=\"scroll-m-20 text-lg font-bold tracking-tight\">\n            {movie.title || movie.name}\n          </h3>\n          <h4 className=\"text-sm text-muted-foreground font-bold\">\n            {movie.release_date && new Date(movie.release_date).getFullYear()}\n            {movie.first_air_date &&\n              new Date(movie.first_air_date).getFullYear()}\n          </h4>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default MovieItem;\n","import { axios, baseOptions } from './api';\n\n/**\n * Fetches trending movie data for the current day.\n * @async\n * @function fetchTrendingData\n * @returns {Promise<Array>} A promise that resolves to an array of trending movie data.\n */\nconst fetchTrendingData = async () => {\n  const { data } = await axios.get(\n    '/trending/movie/day?language=en-US',\n    baseOptions\n  );\n\n  return data.results;\n};\n\nexport { fetchTrendingData };\n","import { useQuery } from '@tanstack/react-query';\nimport { fetchTrendingData } from 'services/fetchTrendingData';\n\nimport MovieItem from 'components/MovieItem';\nimport { Loader } from 'components/Loader';\nimport { AlertDestructive } from 'components/Alert';\n\n/**\n * Home component displaying trending movies and TV shows.\n * @returns {JSX.Element} JSX element representing the Home component.\n */\nconst Home = () => {\n  const { isPending, isError, data, error } = useQuery({\n    queryKey: ['tranding'],\n    queryFn: fetchTrendingData,\n  });\n\n  if (isPending) {\n    return <Loader />;\n  }\n\n  if (isError) {\n    return <AlertDestructive message={error.message} />;\n  }\n\n  return (\n    <div>\n      <h1 className=\"scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl pb-8\">\n        Trending Movies and TV Shows\n      </h1>\n      <div className=\"grid grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n        {data.map(movie => (\n          <MovieItem movie={movie} key={movie.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\n/**\n * Axios instance for making HTTP requests.\n * @namespace axios\n * @property {Object} defaults - Default configuration for axios.\n * @property {string} defaults.baseURL - The base URL for all requests.\n */\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n/**\n * Default options for axios requests.\n * @namespace baseOptions\n * @property {Object} headers - Headers to be included in the requests.\n * @property {string} headers.accept - Specifies the desired content type for the response.\n * @property {string} headers.Authorization - Authorization token for accessing the API.\n */\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["badgeVariants","cva","variants","variant","default","secondary","destructive","outline","defaultVariants","Badge","_ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","cn","alertVariants","Alert","React","ref","role","displayName","AlertTitle","_ref2","_excluded2","AlertDescription","_ref3","_excluded3","AlertDestructive","message","_jsxs","children","ExclamationTriangleIcon","AlertInfo","InfoCircledIcon","AlertNoCast","AlertNoReviews","movie","Link","to","concat","id","src","poster_path","title","name","alt","media_type","charAt","toUpperCase","slice","release_date","Date","getFullYear","first_air_date","fetchTrendingData","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","baseOptions","sent","abrupt","results","stop","apply","arguments","_useQuery","useQuery","queryKey","queryFn","isPending","isError","error","Loader","map","MovieItem","headers","accept","Authorization"],"sourceRoot":""}