{"version":3,"file":"static/js/370.535c0b8a.chunk.js","mappings":"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","sources":["services/searchMovies.js","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { axios, baseOptions } from './api';\n\nconst searchMovies = async queryParams => {\n  const options = {\n    ...baseOptions,\n    params: {\n      query: queryParams.query,\n      include_adult: queryParams.include_adult || false,\n      language: queryParams.language || 'en-US',\n      primary_release_year: queryParams.primary_release_year || '',\n      page: queryParams.page || 1,\n      region: queryParams.region || '',\n      year: queryParams.year || '',\n    },\n  };\n\n  const { data } = await axios.get('/search/movie', options);\n  return data.results;\n};\n\nexport { searchMovies };\n","import { useRef, useEffect } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { searchMovies } from 'services/searchMovies';\n\nconst Movies = () => {\n  const searchInputRef = useRef(null);\n  const yearInputRef = useRef(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const { data, isLoading, isError, error, refetch } = useQuery({\n    queryKey: ['searchMovies'],\n    queryFn: async () => {\n      return await searchMovies({\n        query: searchInputRef.current?.value.trim(),\n        include_adult: false,\n        language: 'en-US',\n        primary_release_year: yearInputRef.current?.value.trim(),\n        page: 1,\n        region: '',\n        year: '',\n      });\n    },\n  });\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    const searchQuery = searchInputRef.current.value.trim();\n    const releaseYear = yearInputRef.current.value.trim();\n\n    setSearchParams({\n      query: searchQuery,\n      ...(releaseYear && { year: releaseYear }),\n    });\n\n    refetch({\n      query: searchQuery,\n      include_adult: false,\n      language: 'en-US',\n      primary_release_year: releaseYear,\n      page: 1,\n      region: '',\n      year: '',\n    });\n  };\n\n  useEffect(() => {\n    const q = searchParams.get('query') || '';\n    const year = searchParams.get('year') || '';\n    searchInputRef.current.value = q;\n    yearInputRef.current.value = year;\n  }, [searchParams]);\n\n  return (\n    <div>\n      <h1 className=\"scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl\">\n        Search Movies\n      </h1>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          ref={searchInputRef}\n          placeholder=\"Enter movie title...\"\n        />\n        <input\n          type=\"text\"\n          ref={yearInputRef}\n          placeholder=\"Enter release year...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <div>Loading...</div>}\n      {isError && <div>Error fetching data: {error.message}</div>}\n      <div>\n        {data?.map(movie => (\n          <Link to={`/movies/${movie.id}`} key={movie.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w342${movie.poster_path}`}\n              alt={movie.title || movie.name}\n            />\n            <h3>{movie.title || movie.name}</h3>\n            <h4>\n              {movie.release_date\n                ? new Date(movie.release_date).getFullYear()\n                : new Date(movie.first_air_date).getFullYear()}\n            </h4>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["searchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","queryParams","options","_yield$axios$get","data","_context","prev","next","_objectSpread","baseOptions","params","query","include_adult","language","primary_release_year","page","region","year","axios","sent","abrupt","results","stop","_x","apply","arguments","searchInputRef","useRef","yearInputRef","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useQuery","useQuery","queryKey","queryFn","_queryFn","_searchInputRef$curre","_yearInputRef$current","current","value","trim","isLoading","isError","error","refetch","handleSearch","_callee2","e","searchQuery","releaseYear","_context2","preventDefault","useEffect","q","get","_jsxs","children","_jsx","className","onSubmit","type","ref","placeholder","message","map","movie","Link","to","concat","id","src","poster_path","alt","title","name","release_date","Date","getFullYear","first_air_date","headers","accept","Authorization"],"sourceRoot":""}