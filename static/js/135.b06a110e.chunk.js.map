{"version":3,"file":"static/js/135.b06a110e.chunk.js","mappings":"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","sources":["@/components/ui/badge.jsx","components/Loader.jsx","components/MovieItem.jsx","services/searchMovies.js","@/components/ui/input.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import * as React from \"react\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  ...props\n}) {\n  return (<div className={cn(badgeVariants({ variant }), className)} {...props} />);\n}\n\nexport { Badge, badgeVariants }\n","import { ReloadIcon } from '@radix-ui/react-icons';\n\nimport { Button } from '@/components/ui/button';\n\nexport const Loader = () => {\n  return (\n    <Button className=\"my-4\" disabled>\n      <ReloadIcon className=\"mr-2 h-4 w-4 animate-spin\" />\n      Please wait\n    </Button>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nimport { Badge } from '@/components/ui/badge';\n\nconst MovieItem = ({ movie }) => {\n  return (\n    <Link to={`/movies/${movie.id}`} key={movie.id}>\n      <div className=\"flex flex-col gap-2\">\n        <div className=\"overflow-hidden rounded-lg\">\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w342${movie.poster_path}`\n                : `https://placehold.co/342x513?text=${\n                    movie.title || movie.name\n                  }`\n            }\n            alt={movie.title || movie.name}\n            className=\"h-auto w-auto object-cover transition-all hover:scale-105\"\n          />\n        </div>\n        {movie.media_type && (\n          <div className=\"flex-none\">\n            <Badge>\n              {movie.media_type.charAt(0).toUpperCase() +\n                movie.media_type.slice(1)}\n            </Badge>\n          </div>\n        )}\n\n        <div className=\"flex flex-col gap-x-0.5\">\n          <h3 className=\"scroll-m-20 text-lg font-bold tracking-tight\">\n            {movie.title || movie.name}\n          </h3>\n          <h4 className=\"text-md text-muted-foreground font-bold\">\n            {movie.release_date && new Date(movie.release_date).getFullYear()}\n            {movie.first_air_date &&\n              new Date(movie.first_air_date).getFullYear()}\n          </h4>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default MovieItem;\n","import { axios, baseOptions } from './api';\n\nconst searchMovies = async queryParams => {\n  const options = {\n    ...baseOptions,\n    params: {\n      query: queryParams.query,\n      include_adult: queryParams.include_adult || false,\n      language: queryParams.language || 'en-US',\n      primary_release_year: queryParams.primary_release_year || '',\n      page: queryParams.page || 1,\n      region: queryParams.region || '',\n      year: queryParams.year || '',\n    },\n  };\n\n  const { data } = await axios.get('/search/movie', options);\n  return data.results;\n};\n\nexport { searchMovies };\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\n  return (\n    (<input\n      type={type}\n      className={cn(\n        \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      ref={ref}\n      {...props} />)\n  );\n})\nInput.displayName = \"Input\"\n\nexport { Input }\n","import { useRef, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { searchMovies } from 'services/searchMovies';\n\nimport MovieItem from 'components/MovieItem';\n\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Loader } from 'components/Loader';\n\nimport { MagnifyingGlassIcon } from '@radix-ui/react-icons';\n\nconst Movies = () => {\n  const searchInputRef = useRef(null);\n  const yearInputRef = useRef(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const { data, isLoading, isError, error, refetch } = useQuery({\n    queryKey: ['searchMovies'],\n    queryFn: async () => {\n      return await searchMovies({\n        query: searchInputRef.current?.value.trim(),\n        include_adult: false,\n        language: 'en-US',\n        primary_release_year: yearInputRef.current?.value.trim(),\n        page: 1,\n        region: '',\n        year: '',\n      });\n    },\n  });\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    const searchQuery = searchInputRef.current.value.trim();\n    const releaseYear = yearInputRef.current.value.trim();\n\n    setSearchParams({\n      query: searchQuery,\n      ...(releaseYear && { year: releaseYear }),\n    });\n\n    refetch({\n      query: searchQuery,\n      include_adult: false,\n      language: 'en-US',\n      primary_release_year: releaseYear,\n      page: 1,\n      region: '',\n      year: '',\n    });\n  };\n\n  useEffect(() => {\n    const q = searchParams.get('query') || '';\n    const year = searchParams.get('year') || '';\n    searchInputRef.current.value = q;\n    yearInputRef.current.value = year;\n  }, [searchParams]);\n\n  return (\n    <div>\n      <h1 className=\"scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl pb-8\">\n        Search Movies\n      </h1>\n      <form onSubmit={handleSearch}>\n        <div className=\"flex flex-col sm:flex-row w-full max-w-2xl items-start gap-2 pb-8\">\n          <Input\n            type=\"text\"\n            ref={searchInputRef}\n            placeholder=\"Enter movie title...\"\n          />\n          <Input\n            type=\"text\"\n            ref={yearInputRef}\n            placeholder=\"Enter release year...\"\n          />\n          <Button type=\"submit\">\n            <MagnifyingGlassIcon className=\"mr-2 h-4 w-4\" />\n            Search\n          </Button>\n        </div>\n      </form>\n      {isLoading && <Loader />}\n      {isError && <div>Error fetching data: {error.message}</div>}\n      <div className='className=\"grid grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4'>\n        {data?.map(movie => (\n          <MovieItem movie={movie} key={movie.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["badgeVariants","cva","variants","variant","default","secondary","destructive","outline","defaultVariants","Badge","_ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","cn","Loader","_jsxs","Button","disabled","children","ReloadIcon","movie","Link","to","concat","id","src","poster_path","title","name","alt","media_type","charAt","toUpperCase","slice","release_date","Date","getFullYear","first_air_date","searchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","queryParams","options","_yield$axios$get","data","_context","prev","next","baseOptions","params","query","include_adult","language","primary_release_year","page","region","year","axios","sent","abrupt","results","stop","_x","apply","arguments","Input","React","ref","type","displayName","searchInputRef","useRef","yearInputRef","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useQuery","useQuery","queryKey","queryFn","_queryFn","_searchInputRef$curre","_yearInputRef$current","current","value","trim","isLoading","isError","error","refetch","handleSearch","_callee2","e","searchQuery","releaseYear","_context2","preventDefault","useEffect","q","get","onSubmit","placeholder","MagnifyingGlassIcon","message","map","MovieItem","headers","accept","Authorization"],"sourceRoot":""}