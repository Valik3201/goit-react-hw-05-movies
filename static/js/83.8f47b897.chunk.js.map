{"version":3,"file":"static/js/83.8f47b897.chunk.js","mappings":"iXAKMA,GAAgBC,EAAAA,EAAAA,GACpB,0KACA,CACEC,SAAU,CACRC,QAAS,CACPC,QAAS,gCACTC,YACE,4FAGNC,gBAAiB,CACfH,QAAS,aAKTI,EAAQC,EAAAA,YAAiB,SAAAC,EAAmCC,GAAG,IAAnCC,EAASF,EAATE,UAAWR,EAAOM,EAAPN,QAAYS,GAAKC,EAAAA,EAAAA,GAAAJ,EAAAK,GAAA,OAC5DC,EAAAA,EAAAA,KAAA,OAAAC,EAAAA,EAAAA,GAAA,CACEN,IAAKA,EACLO,KAAK,QACLN,WAAWO,EAAAA,EAAAA,IAAGlB,EAAc,CAAEG,QAAAA,IAAYQ,IACtCC,GACJ,IAEJL,EAAMY,YAAc,QAEpB,IAAMC,EAAaZ,EAAAA,YAAiB,SAAAa,EAA0BX,GAAG,IAA1BC,EAASU,EAATV,UAAcC,GAAKC,EAAAA,EAAAA,GAAAQ,EAAAC,GAAA,OACxDP,EAAAA,EAAAA,KAAA,OAAAC,EAAAA,EAAAA,GAAA,CACEN,IAAKA,EACLC,WAAWO,EAAAA,EAAAA,IAAG,+CAAgDP,IAC1DC,GACJ,IAEJQ,EAAWD,YAAc,aAEzB,IAAMI,EAAmBf,EAAAA,YAAiB,SAAAgB,EAA0Bd,GAAG,IAA1BC,EAASa,EAATb,UAAcC,GAAKC,EAAAA,EAAAA,GAAAW,EAAAC,GAAA,OAC9DV,EAAAA,EAAAA,KAAA,OAAAC,EAAAA,EAAAA,GAAA,CACEN,IAAKA,EACLC,WAAWO,EAAAA,EAAAA,IAAG,gCAAiCP,IAC3CC,GACJ,IAEJW,EAAiBJ,YAAc,mBCxCxB,IAAMO,EAAmB,SAAHjB,GAAqB,IAAfkB,EAAOlB,EAAPkB,QACjC,OACEC,EAAAA,EAAAA,MAACrB,EAAK,CAACJ,QAAQ,cAAcQ,UAAU,YAAWkB,SAAA,EAChDd,EAAAA,EAAAA,KAACe,EAAAA,IAAuB,CAACnB,UAAU,aACnCI,EAAAA,EAAAA,KAACK,EAAU,CAAAS,SAAC,WACZd,EAAAA,EAAAA,KAACQ,EAAgB,CAAAM,SAAEF,MAGzB,EAEaI,EAAY,WACvB,OACEH,EAAAA,EAAAA,MAACrB,EAAK,CAACI,UAAU,YAAWkB,SAAA,EAC1Bd,EAAAA,EAAAA,KAACiB,EAAAA,IAAe,CAACrB,UAAU,2BAC3BI,EAAAA,EAAAA,KAACK,EAAU,CAAAS,SAAC,uBACZd,EAAAA,EAAAA,KAACQ,EAAgB,CAAAM,SAAC,iGAMxB,EAEaI,EAAc,WACzB,OACEL,EAAAA,EAAAA,MAACrB,EAAK,CAACI,UAAU,iBAAgBkB,SAAA,EAC/Bd,EAAAA,EAAAA,KAACiB,EAAAA,IAAe,CAACrB,UAAU,2BAC3BI,EAAAA,EAAAA,KAACK,EAAU,CAAAS,SAAC,yBACZd,EAAAA,EAAAA,KAACQ,EAAgB,CAAAM,SAAC,uEAKxB,EAEaK,EAAiB,WAC5B,OACEN,EAAAA,EAAAA,MAACrB,EAAK,CAACI,UAAU,iBAAgBkB,SAAA,EAC/Bd,EAAAA,EAAAA,KAACiB,EAAAA,IAAe,CAACrB,UAAU,2BAC3BI,EAAAA,EAAAA,KAACK,EAAU,CAAAS,SAAC,oBACZd,EAAAA,EAAAA,KAACQ,EAAgB,CAAAM,SAAC,+DAKxB,C,mIClDMM,EAAS,eAAA1B,GAAA2B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAQ,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPC,EAAAA,EAAAA,IAAU,UAADC,OACpBP,EAAQ,2BAClBQ,EAAAA,GACA,KAAD,EAHW,OAGXP,EAAAE,EAAAM,KAHOP,EAAID,EAAJC,KAAIC,EAAAO,OAAA,SAKLR,EAAKS,MAAI,wBAAAR,EAAAS,OAAA,GAAAb,EAAA,KACjB,gBAPcc,GAAA,OAAA3C,EAAA4C,MAAA,KAAAC,UAAA,K,6BCgDf,EA1Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAAmCC,EAAAA,EAAAA,GAAS,CAC1CC,SAAU,CAAC,OAAQJ,GACnBK,QAAS,kBAAMzB,EAAUoB,EAAQ,IAF3Bd,EAAIgB,EAAJhB,KAAMoB,EAASJ,EAATI,UAAWC,EAAKL,EAALK,MAKzB,OAAID,GACK9C,EAAAA,EAAAA,KAACgD,EAAAA,EAAM,IAGZD,GACK/C,EAAAA,EAAAA,KAACW,EAAAA,GAAgB,CAACC,QAASmC,EAAMnC,WAIxCC,EAAAA,EAAAA,MAAAoC,EAAAA,SAAA,CAAAnC,SAAA,EACIgC,GAA6B,IAAhBpB,EAAKwB,SAAgBlD,EAAAA,EAAAA,KAACkB,EAAAA,GAAW,KAChDlB,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,+DAA8DkB,SAC1EY,EAAKyB,KAAI,SAAAC,GAAK,OACbpD,EAAAA,EAAAA,KAAA,MAAAc,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEd,EAAAA,EAAAA,KAAA,OACEqD,IACED,EAAME,aAAY,kCAAAvB,OACoBqB,EAAME,cAAY,qCAAAvB,OACfqB,EAAMG,MAEjDC,IAAKJ,EAAMG,KACX3D,UAAU,qBAEZI,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,YAAWkB,SAAEsC,EAAMG,QAChCvD,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,wBAAuBkB,SAAEsC,EAAMK,gBAZvCL,EAAMM,GAcV,QAKf,C,wFC5CaV,EAAS,WACpB,OACEnC,EAAAA,EAAAA,MAAC8C,EAAAA,EAAM,CAAC/D,UAAU,OAAOgE,UAAQ,EAAA9C,SAAA,EAC/Bd,EAAAA,EAAAA,KAAC6D,EAAAA,IAAU,CAACjE,UAAU,8BAA8B,gBAI1D,C,8FCTAkC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAME,EAAc,CAClB8B,QAAS,CACPC,OAAQ,mBACRC,cACE,8N","sources":["@/components/ui/alert.jsx","components/Alert.jsx","services/fetchCast.js","components/Cast.jsx","components/Loader.jsx","services/api.js"],"sourcesContent":["import * as React from 'react';\nimport { cva } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst alertVariants = cva(\n  'relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7',\n  {\n    variants: {\n      variant: {\n        default: 'bg-background text-foreground',\n        destructive:\n          'border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nconst Alert = React.forwardRef(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n));\nAlert.displayName = 'Alert';\n\nconst AlertTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('mb-1 font-medium leading-none tracking-tight', className)}\n    {...props}\n  />\n));\nAlertTitle.displayName = 'AlertTitle';\n\nconst AlertDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('text-sm [&_p]:leading-relaxed', className)}\n    {...props}\n  />\n));\nAlertDescription.displayName = 'AlertDescription';\n\nexport { Alert, AlertTitle, AlertDescription };\n","import {\n  ExclamationTriangleIcon,\n  InfoCircledIcon,\n} from '@radix-ui/react-icons';\n\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\n\nexport const AlertDestructive = ({ message }) => {\n  return (\n    <Alert variant=\"destructive\" className=\"max-w-2xl\">\n      <ExclamationTriangleIcon className=\"h-4 w-4\" />\n      <AlertTitle>Error</AlertTitle>\n      <AlertDescription>{message}</AlertDescription>\n    </Alert>\n  );\n};\n\nexport const AlertInfo = () => {\n  return (\n    <Alert className=\"max-w-2xl\">\n      <InfoCircledIcon className=\"h-4 w-4 text-blue-500\" />\n      <AlertTitle>No Search Results</AlertTitle>\n      <AlertDescription>\n        Your search did not match any movies. Please try again with different\n        keywords or filters.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\nexport const AlertNoCast = () => {\n  return (\n    <Alert className=\"max-w-2xl mt-8\">\n      <InfoCircledIcon className=\"h-4 w-4 text-blue-500\" />\n      <AlertTitle>No Cast Information</AlertTitle>\n      <AlertDescription>\n        There is no information available about the cast for this movie.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\nexport const AlertNoReviews = () => {\n  return (\n    <Alert className=\"max-w-2xl mt-8\">\n      <InfoCircledIcon className=\"h-4 w-4 text-blue-500\" />\n      <AlertTitle>No Reviews Yet</AlertTitle>\n      <AlertDescription>\n        There are currently no reviews available for this movie.\n      </AlertDescription>\n    </Alert>\n  );\n};\n","import { axios, baseOptions } from './api';\n\nconst fetchCast = async movie_id => {\n  const { data } = await axios.get(\n    `/movie/${movie_id}/credits?language=en-US`,\n    baseOptions\n  );\n\n  return data.cast;\n};\n\nexport { fetchCast };\n","import { useParams } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { fetchCast } from 'services/fetchCast';\n\nimport { Loader } from './Loader';\nimport { AlertDestructive, AlertNoCast } from './Alert';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const { data, isLoading, error } = useQuery({\n    queryKey: ['cast', movieId],\n    queryFn: () => fetchCast(movieId),\n  });\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <AlertDestructive message={error.message} />;\n  }\n\n  return (\n    <>\n      {!isLoading && data.length === 0 && <AlertNoCast />}\n      <div className=\"grid grid-cols-4 sm:grid-cols-6 gap-4 max-w-5xl py-4 text-xs\">\n        {data.map(actor => (\n          <ul key={actor.id}>\n            <li>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w185${actor.profile_path}`\n                    : `https://placehold.co/185x278?text=${actor.name}`\n                }\n                alt={actor.name}\n                className=\"rounded-lg mb-2\"\n              />\n              <p className=\"font-bold\">{actor.name}</p>\n              <p className=\"text-muted-foreground\">{actor.character}</p>\n            </li>\n          </ul>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Cast;\n","import { ReloadIcon } from '@radix-ui/react-icons';\n\nimport { Button } from '@/components/ui/button';\n\nexport const Loader = () => {\n  return (\n    <Button className=\"my-4\" disabled>\n      <ReloadIcon className=\"mr-2 h-4 w-4 animate-spin\" />\n      Please wait\n    </Button>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["alertVariants","cva","variants","variant","default","destructive","defaultVariants","Alert","React","_ref","ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","role","cn","displayName","AlertTitle","_ref2","_excluded2","AlertDescription","_ref3","_excluded3","AlertDestructive","message","_jsxs","children","ExclamationTriangleIcon","AlertInfo","InfoCircledIcon","AlertNoCast","AlertNoReviews","fetchCast","_asyncToGenerator","_regeneratorRuntime","_callee","movie_id","_yield$axios$get","data","_context","prev","next","axios","concat","baseOptions","sent","abrupt","cast","stop","_x","apply","arguments","movieId","useParams","_useQuery","useQuery","queryKey","queryFn","isLoading","error","Loader","_Fragment","length","map","actor","src","profile_path","name","alt","character","id","Button","disabled","ReloadIcon","headers","accept","Authorization"],"sourceRoot":""}