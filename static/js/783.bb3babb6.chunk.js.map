{"version":3,"file":"static/js/783.bb3babb6.chunk.js","mappings":"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","sources":["@/components/ui/badge.jsx","@/components/ui/alert.jsx","components/Alert.jsx","services/fetchMovieDetails.js","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import * as React from \"react\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  ...props\n}) {\n  return (<div className={cn(badgeVariants({ variant }), className)} {...props} />);\n}\n\nexport { Badge, badgeVariants }\n","import * as React from 'react';\nimport { cva } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst alertVariants = cva(\n  'relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7',\n  {\n    variants: {\n      variant: {\n        default: 'bg-background text-foreground',\n        destructive:\n          'border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nconst Alert = React.forwardRef(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n));\nAlert.displayName = 'Alert';\n\nconst AlertTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('mb-1 font-medium leading-none tracking-tight', className)}\n    {...props}\n  />\n));\nAlertTitle.displayName = 'AlertTitle';\n\nconst AlertDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('text-sm [&_p]:leading-relaxed', className)}\n    {...props}\n  />\n));\nAlertDescription.displayName = 'AlertDescription';\n\nexport { Alert, AlertTitle, AlertDescription };\n","import {\n  ExclamationTriangleIcon,\n  InfoCircledIcon,\n} from '@radix-ui/react-icons';\n\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\n\n/**\n * Alert component for displaying destructive alerts.\n * @param {string} message - The message to display in the alert.\n * @returns {JSX.Element} JSX element representing the AlertDestructive component.\n */\nexport const AlertDestructive = ({ message }) => {\n  return (\n    <Alert variant=\"destructive\" className=\"max-w-2xl\">\n      <ExclamationTriangleIcon className=\"h-4 w-4\" />\n      <AlertTitle>Error</AlertTitle>\n      <AlertDescription>{message}</AlertDescription>\n    </Alert>\n  );\n};\n\n/**\n * Alert component for displaying informational alerts.\n * @returns {JSX.Element} JSX element representing the AlertInfo component.\n */\nexport const AlertInfo = () => {\n  return (\n    <Alert className=\"max-w-2xl\">\n      <InfoCircledIcon className=\"h-4 w-4 text-blue-500\" />\n      <AlertTitle>No Search Results</AlertTitle>\n      <AlertDescription>\n        Your search did not match any movies. Please try again with different\n        keywords or filters.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\n/**\n * Alert component for indicating no cast information available.\n * @returns {JSX.Element} JSX element representing the AlertNoCast component.\n */\nexport const AlertNoCast = () => {\n  return (\n    <Alert className=\"max-w-2xl mt-8\">\n      <InfoCircledIcon className=\"h-4 w-4 text-blue-500\" />\n      <AlertTitle>No Cast Information</AlertTitle>\n      <AlertDescription>\n        There is no information available about the cast for this movie.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\n/**\n * Alert component for indicating no reviews available.\n * @returns {JSX.Element} JSX element representing the AlertNoReviews component.\n */\nexport const AlertNoReviews = () => {\n  return (\n    <Alert className=\"max-w-2xl mt-8\">\n      <InfoCircledIcon className=\"h-4 w-4 text-blue-500\" />\n      <AlertTitle>No Reviews Yet</AlertTitle>\n      <AlertDescription>\n        There are currently no reviews available for this movie.\n      </AlertDescription>\n    </Alert>\n  );\n};\n","import { axios, baseOptions } from './api';\n\n/**\n * Fetches details for a given movie ID.\n * @async\n * @function fetchMovieDetails\n * @param {number} movie_id - The ID of the movie for which to fetch details.\n * @returns {Promise<Object>} A promise that resolves to an object containing movie details.\n */\nconst fetchMovieDetails = async movie_id => {\n  const { data } = await axios.get(\n    `/movie/${movie_id}?language=en-US`,\n    baseOptions\n  );\n\n  return data;\n};\n\nexport { fetchMovieDetails };\n","import { NavLink, Outlet, useParams } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { Suspense } from 'react';\n\nimport { format } from 'date-fns';\n\nimport { fetchMovieDetails } from 'services/fetchMovieDetails';\n\nimport { Badge } from '@/components/ui/badge';\n\nimport { Loader } from 'components/Loader';\nimport { AlertDestructive } from 'components/Alert';\n\n/**\n * Component displaying details of a specific movie.\n * @returns {JSX.Element} JSX element representing the MovieDetails component.\n */\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const { isPending, isError, data, error } = useQuery({\n    queryKey: ['movieDetails', movieId],\n    queryFn: () => fetchMovieDetails(movieId),\n  });\n\n  if (isPending) {\n    return <Loader />;\n  }\n\n  if (isError) {\n    return <AlertDestructive message={error.message} />;\n  }\n\n  return (\n    <div>\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 sm:gap-8 max-w-6xl\">\n        <img\n          src={\n            data.poster_path\n              ? `https://image.tmdb.org/t/p/original${data.poster_path}`\n              : `https://placehold.co/342x513?text=${data.title}`\n          }\n          alt={data.title}\n          className=\"w-full rounded-lg\"\n        />\n        <div className=\"col-span-2 flex flex-col gap-4\">\n          <div>\n            <h1 className=\"scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl\">\n              {data.title}\n            </h1>\n\n            {data.original_language !== 'en' && (\n              <h2 className=\"scroll-m-20 pt-2 text-3xl text-muted-foreground font-semibold tracking-tight first:mt-0\">\n                {data.original_title}\n              </h2>\n            )}\n          </div>\n\n          <p className=\"text-md font-semibold\">\n            Realese date:{' '}\n            <span className=\"text-muted-foreground\">\n              {format(new Date(data.release_date), 'MMMM d, yyyy')}\n            </span>\n          </p>\n\n          {data.tagline && (\n            <blockquote className=\"border-l-2 pl-6 italic\">\n              {data.tagline}\n            </blockquote>\n          )}\n\n          <p className=\"leading-7\">{data.overview}</p>\n\n          <div className=\"flex flex-row flex-wrap gap-2\">\n            <p className=\"scroll-m-20 text-md font-semibold tracking-tight\">\n              Genres:\n            </p>\n            {data.genres.map(genre => (\n              <ul key={genre.id}>\n                <li>\n                  <Badge>{genre.name}</Badge>\n                </li>\n              </ul>\n            ))}\n          </div>\n\n          <div className=\"flex flex-row flex-wrap gap-2\">\n            <p className=\"scroll-m-20 text-md font-semibold tracking-tight\">\n              Production Countries:\n            </p>\n            {data.production_countries.map(country => (\n              <ul key={country.iso_3166_1}>\n                <li>\n                  <Badge>{country.name}</Badge>\n                </li>\n              </ul>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <ul className=\"flex flex-row gap-4 border-b pt-4 pb-2\">\n        <li>\n          <NavLink\n            to=\"cast\"\n            className={({ isActive }) =>\n              isActive\n                ? 'scroll-m-20 text-2xl font-semibold tracking-tight'\n                : 'scroll-m-20 text-2xl font-semibold tracking-tight text-muted-foreground transition hover:text-inherit'\n            }\n          >\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"reviews\"\n            className={({ isActive }) =>\n              isActive\n                ? 'scroll-m-20 text-2xl font-semibold tracking-tight'\n                : 'scroll-m-20 text-2xl font-semibold tracking-tight text-muted-foreground transition hover:text-inherit'\n            }\n          >\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\n/**\n * Axios instance for making HTTP requests.\n * @namespace axios\n * @property {Object} defaults - Default configuration for axios.\n * @property {string} defaults.baseURL - The base URL for all requests.\n */\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n/**\n * Default options for axios requests.\n * @namespace baseOptions\n * @property {Object} headers - Headers to be included in the requests.\n * @property {string} headers.accept - Specifies the desired content type for the response.\n * @property {string} headers.Authorization - Authorization token for accessing the API.\n */\nconst baseOptions = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYTMyZWM5MzExODExYjA2NDkyNzhmZGFmYzEyMzAwZSIsInN1YiI6IjY1YzIwN2U2ZjQ0ZjI3MDE2M2MwYzBjMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zkFtcEcge5gUigfN2sq7K5C-DaNfEfDz1qyoSucACIQ',\n  },\n};\n\nexport { axios, baseOptions };\n"],"names":["badgeVariants","cva","variants","variant","default","secondary","destructive","outline","defaultVariants","Badge","_ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","cn","alertVariants","Alert","React","ref","role","displayName","AlertTitle","_ref2","_excluded2","AlertDescription","_ref3","_excluded3","AlertDestructive","message","_jsxs","children","ExclamationTriangleIcon","AlertInfo","InfoCircledIcon","AlertNoCast","AlertNoReviews","fetchMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","movie_id","_yield$axios$get","data","_context","prev","next","axios","concat","baseOptions","sent","abrupt","stop","_x","apply","arguments","movieId","useParams","_useQuery","useQuery","queryKey","queryFn","isPending","isError","error","Loader","src","poster_path","title","alt","original_language","original_title","format","Date","release_date","tagline","overview","genres","map","genre","name","id","production_countries","country","iso_3166_1","NavLink","to","isActive","Suspense","fallback","Outlet","headers","accept","Authorization"],"sourceRoot":""}